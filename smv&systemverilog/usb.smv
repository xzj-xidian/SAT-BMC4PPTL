-- SMV description generated by Yosys 0.34+23 (git sha1 59fbee4009f, clang 6.0.0-1ubuntu2 -fPIC -Os)
MODULE main
  IVAR
    _DataOut_i : unsigned word[8]; -- DataOut_i
    _TxValid_i : unsigned word[1]; -- TxValid_i
    _clk : unsigned word[1]; -- clk
    _phy_tx_mode : unsigned word[1]; -- phy_tx_mode
    _rst : unsigned word[1]; -- rst
    _rxd : unsigned word[1]; -- rxd
    _rxdn : unsigned word[1]; -- rxdn
    _rxdp : unsigned word[1]; -- rxdp
  VAR
    _i_tx_phy#txdn : unsigned word[1]; -- \i_tx_phy.txdn
    _i_tx_phy#state : unsigned word[3]; -- \i_tx_phy.state
    _i_tx_phy#ld_sop_d : unsigned word[1]; -- \i_tx_phy.ld_sop_d
    _i_tx_phy#append_eop_sync1 : unsigned word[1]; -- \i_tx_phy.append_eop_sync1
    _i_tx_phy#ld_eop_d : unsigned word[1]; -- \i_tx_phy.ld_eop_d
    _rst_cnt : unsigned word[5]; -- \rst_cnt
    _i_tx_phy#txoe : unsigned word[1]; -- \i_tx_phy.txoe
    _i_rx_phy#synced_d : unsigned word[1]; -- \i_rx_phy.synced_d
    _i_rx_phy#fs_state : unsigned word[3]; -- \i_rx_phy.fs_state
    _i_rx_phy#rx_active : unsigned word[1]; -- \i_rx_phy.rx_active
    _i_rx_phy#rx_valid_r : unsigned word[1]; -- \i_rx_phy.rx_valid_r
    _i_rx_phy#sd_nrzi : unsigned word[1]; -- \i_rx_phy.sd_nrzi
    _i_rx_phy#one_cnt : unsigned word[3]; -- \i_rx_phy.one_cnt
    _i_tx_phy#hold_reg : unsigned word[8]; -- \i_tx_phy.hold_reg
    _i_tx_phy#append_eop_sync2 : unsigned word[1]; -- \i_tx_phy.append_eop_sync2
    _i_rx_phy#bit_cnt : unsigned word[3]; -- \i_rx_phy.bit_cnt
    _i_tx_phy#one_cnt : unsigned word[3]; -- \i_tx_phy.one_cnt
    _i_rx_phy#rx_valid1 : unsigned word[1]; -- \i_rx_phy.rx_valid1
    _i_tx_phy#txoe_r2 : unsigned word[1]; -- \i_tx_phy.txoe_r2
    _i_tx_phy#sd_bs_o : unsigned word[1]; -- \i_tx_phy.sd_bs_o
    _i_tx_phy#append_eop_sync3 : unsigned word[1]; -- \i_tx_phy.append_eop_sync3
    _i_tx_phy#tx_ip : unsigned word[1]; -- \i_tx_phy.tx_ip
    _i_tx_phy#tx_ip_sync : unsigned word[1]; -- \i_tx_phy.tx_ip_sync
    _i_tx_phy#data_done : unsigned word[1]; -- \i_tx_phy.data_done
    _i_tx_phy#bit_cnt : unsigned word[3]; -- \i_tx_phy.bit_cnt
    _i_tx_phy#sd_nrzi_o : unsigned word[1]; -- \i_tx_phy.sd_nrzi_o
    _i_tx_phy#txdp : unsigned word[1]; -- \i_tx_phy.txdp
    _i_tx_phy#append_eop : unsigned word[1]; -- \i_tx_phy.append_eop
    _i_tx_phy#txoe_r1 : unsigned word[1]; -- \i_tx_phy.txoe_r1
    _i_tx_phy#sd_raw_o : unsigned word[1]; -- \i_tx_phy.sd_raw_o
    _i_tx_phy#TxReady_o : unsigned word[1]; -- \i_tx_phy.TxReady_o
    _i_rx_phy#hold_reg : unsigned word[8]; -- \i_rx_phy.hold_reg
    _i_rx_phy#shift_en : unsigned word[1]; -- \i_rx_phy.shift_en
    _i_rx_phy#sd_r : unsigned word[1]; -- \i_rx_phy.sd_r
    _i_rx_phy#fs_ce_d : unsigned word[1]; -- \i_rx_phy.fs_ce_d
    _i_rx_phy#dpll_state : unsigned word[2]; -- \i_rx_phy.dpll_state
    _i_tx_phy#tx_ready_d : unsigned word[1]; -- \i_tx_phy.tx_ready_d
    _i_rx_phy#rxd_s1 : unsigned word[1]; -- \i_rx_phy.rxd_s1
    _i_rx_phy#rxd_s : unsigned word[1]; -- \i_rx_phy.rxd_s
    _i_rx_phy#rxdp_t1 : unsigned word[1]; -- \i_rx_phy.rxdp_t1
    _i_rx_phy#rxdp_s1 : unsigned word[1]; -- \i_rx_phy.rxdp_s1
    _i_rx_phy#rxdn_t1 : unsigned word[1]; -- \i_rx_phy.rxdn_t1
    _i_rx_phy#rxdn_s1 : unsigned word[1]; -- \i_rx_phy.rxdn_s1
    _i_rx_phy#rxdp_s1r : unsigned word[1]; -- \i_rx_phy.rxdp_s1r
    _i_rx_phy#rxdn_s1r : unsigned word[1]; -- \i_rx_phy.rxdn_s1r
    _i_rx_phy#fs_ce_r1 : unsigned word[1]; -- \i_rx_phy.fs_ce_r1
    _i_rx_phy#fs_ce_r2 : unsigned word[1]; -- \i_rx_phy.fs_ce_r2
    _i_rx_phy#fs_ce_r3 : unsigned word[1]; -- \i_rx_phy.fs_ce_r3
    _i_rx_phy#fs_ce : unsigned word[1]; -- \i_rx_phy.fs_ce
    _i_rx_phy#rx_valid : unsigned word[1]; -- \i_rx_phy.rx_valid
    _i_tx_phy#ld_data : unsigned word[1]; -- \i_tx_phy.ld_data
    _i_tx_phy#sft_done : unsigned word[1]; -- \i_tx_phy.sft_done
    _i_tx_phy#sft_done_r : unsigned word[1]; -- \i_tx_phy.sft_done_r
    _usb_rst : unsigned word[1]; -- \usb_rst
    _i_rx_phy#rx_en : unsigned word[1]; -- \i_rx_phy.rx_en
    _i_rx_phy#rxd_t1 : unsigned word[1]; -- \i_rx_phy.rxd_t1
  DEFINE
  rst := bool(_rst);
  rst_cnt_0 := (_rst_cnt = 0ub5_0);
  usb_rst := bool(usb_rst);
  TxReady_o := bool(_TxReady_o);
  TxValid_i := bool(_TxValid_i);
  txoe := bool(_txoe);
  RxValid_o := bool(_RxValid_o);


    _$auto$rtlil#cc#2558#Mux$1314 := bool(_i_rx_phy#fs_ce) ? _$flatten#i_tx_phy#$ternary$usb_phy_1#v#583$87_Y : _i_tx_phy#txdn;
    _$auto$rtlil#cc#2558#Mux$1310 := bool(_$auto$opt_dff#cc#219#make_patterns_logic$1182) ? _$flatten#i_tx_phy#$2#state#2#0# : _i_tx_phy#state;
    _$auto$rtlil#cc#2558#Mux$1306 := bool(_$procmux$896_CMP) ? _$flatten#i_tx_phy#$3#ld_sop_d#0#0# : 0ub1_0;
    _$auto$rtlil#cc#2558#Mux$1302 := bool(_i_rx_phy#fs_ce) ? _i_tx_phy#append_eop : _i_tx_phy#append_eop_sync1;
    _$auto$rtlil#cc#2558#Mux$1298 := bool(_$procmux$807_CMP) ? _$flatten#i_tx_phy#$3#ld_eop_d#0#0# : 0ub1_0;
    _$auto$rtlil#cc#2558#Mux$1294 := bool(_$and$usb_phy_1#v#223$7_Y) ? _$add$usb_phy_1#v#223$8_Y : _rst_cnt;
    _$auto$rtlil#cc#2558#Mux$1290 := bool(_i_rx_phy#fs_ce) ? _$flatten#i_tx_phy#$logic_not$usb_phy_1#v#566$76_Y : _i_tx_phy#txoe;
    _$auto$rtlil#cc#2558#Mux$1286 := bool(_i_rx_phy#fs_ce) ? _$flatten#i_rx_phy#$3#synced_d#0#0# : 0ub1_0;
    _$auto$rtlil#cc#2558#Mux$1282 := bool(_$auto$opt_dff#cc#219#make_patterns_logic$1154) ? _$flatten#i_rx_phy#$3#fs_state#2#0# : _i_rx_phy#fs_state;
    _$auto$rtlil#cc#2558#Mux$1278 := bool(_$auto$opt_dff#cc#194#make_patterns_logic$1149) ? _$flatten#i_rx_phy#$2#rx_active#0#0# : _i_rx_phy#rx_active;
    _$auto$rtlil#cc#2558#Mux$1274 := bool(_i_rx_phy#fs_ce) ? 0ub1_0 : _i_rx_phy#rx_valid_r;
    _$auto$rtlil#cc#2558#Mux$1270 := bool(_$flatten#i_rx_phy#$and$usb_phy_1#v#1000$146_Y) ? _$flatten#i_rx_phy#$logic_not$usb_phy_1#v#1000$148_Y : _i_rx_phy#sd_nrzi;
    _$auto$rtlil#cc#2558#Mux$1266 := bool(_i_rx_phy#fs_ce) ? _$flatten#i_rx_phy#$4#one_cnt#2#0# : _i_rx_phy#one_cnt;
    _$auto$rtlil#cc#2558#Mux$1262 := bool(_i_tx_phy#ld_data) ? _DataOut_i : _i_tx_phy#hold_reg;
    _$auto$rtlil#cc#2558#Mux$1258 := bool(_i_rx_phy#fs_ce) ? _i_tx_phy#append_eop_sync1 : _i_tx_phy#append_eop_sync2;
    _$auto$rtlil#cc#2558#Mux$1254 := bool(_$flatten#i_rx_phy#$and$usb_phy_1#v#1042$166_Y) ? _$flatten#i_rx_phy#$add$usb_phy_1#v#1042$167_Y : _i_rx_phy#bit_cnt;
    _$auto$rtlil#cc#2558#Mux$1250 := bool(_i_rx_phy#fs_ce) ? _$flatten#i_tx_phy#$4#one_cnt#2#0# : _i_tx_phy#one_cnt;
    _$auto$rtlil#cc#2558#Mux$1246 := bool(_$auto$opt_dff#cc#194#make_patterns_logic$1130) ? _$flatten#i_rx_phy#$2#rx_valid1#0#0# : _i_rx_phy#rx_valid1;
    _$auto$rtlil#cc#2558#Mux$1242 := bool(_i_rx_phy#fs_ce) ? _i_tx_phy#txoe_r1 : _i_tx_phy#txoe_r2;
    _$auto$rtlil#cc#2558#Mux$1238 := bool(_i_rx_phy#fs_ce) ? _$flatten#i_tx_phy#$ternary$usb_phy_1#v#504$53_Y : _i_tx_phy#sd_bs_o;
    _$auto$rtlil#cc#2558#Mux$1234 := bool(_i_rx_phy#fs_ce) ? _i_tx_phy#append_eop_sync2 : _i_tx_phy#append_eop_sync3;
    _$auto$rtlil#cc#2558#Mux$1230 := bool(_$auto$opt_dff#cc#194#make_patterns_logic$1124) ? _$flatten#i_tx_phy#$2#tx_ip#0#0# : _i_tx_phy#tx_ip;
    _$auto$rtlil#cc#2558#Mux$1226 := bool(_i_rx_phy#fs_ce) ? _i_tx_phy#tx_ip : _i_tx_phy#tx_ip_sync;
    _$auto$rtlil#cc#2558#Mux$1222 := bool(_$auto$opt_dff#cc#194#make_patterns_logic$1120) ? _$flatten#i_tx_phy#$2#data_done#0#0# : _i_tx_phy#data_done;
    _$auto$rtlil#cc#2558#Mux$1218 := bool(_$flatten#i_tx_phy#$and$usb_phy_1#v#451$30_Y) ? _$flatten#i_tx_phy#$add$usb_phy_1#v#451$31_Y : _i_tx_phy#bit_cnt;
    _$auto$rtlil#cc#2558#Mux$1214 := bool(_$auto$opt_dff#cc#219#make_patterns_logic$1113) ? _$flatten#i_tx_phy#$not$usb_phy_1#v#517$59_Y : _i_tx_phy#sd_nrzi_o;
    _$auto$rtlil#cc#2558#Mux$1210 := bool(_i_rx_phy#fs_ce) ? _$flatten#i_tx_phy#$ternary$usb_phy_1#v#576$81_Y : _i_tx_phy#txdp;
    _$auto$rtlil#cc#2558#Mux$1206 := bool(_$auto$opt_dff#cc#194#make_patterns_logic$1102) ? _$flatten#i_tx_phy#$2#append_eop#0#0# : _i_tx_phy#append_eop;
    _$auto$rtlil#cc#2558#Mux$1202 := bool(_i_rx_phy#fs_ce) ? _i_tx_phy#tx_ip_sync : _i_tx_phy#txoe_r1;
    _$add$usb_phy_1#v#223$8_Y := resize(_rst_cnt, 5) + resize(0ub5_00001, 5);
    _i_rx_phy#rst := resize(_rst, 1) & resize(_$not$usb_phy_1#v#165$1_Y, 1);
    _$and$usb_phy_1#v#223$7_Y := resize(_$logic_not$usb_phy_1#v#223$6_Y, 1) & resize(_i_rx_phy#fs_ce, 1);
    _$auto$rtlil#cc#2558#Mux$1186 := bool(_i_rx_phy#rst) ? _$flatten#i_tx_phy#$2#ld_data_d#0#0# : _i_tx_phy#tx_ready_d;
    _$auto$rtlil#cc#2558#Mux$1188 := bool(_i_rx_phy#rst) ? _$flatten#i_rx_phy#$2#dpll_state#1#0# : 0ub2_01;
    _$auto$rtlil#cc#2558#Mux$1190 := bool(_i_rx_phy#rst) ? _$flatten#i_rx_phy#$2#fs_ce_d#0#0# : _i_rx_phy#fs_ce_d;
    _$auto$rtlil#cc#2558#Mux$1192 := bool(_i_rx_phy#fs_ce) ? _i_rx_phy#rxd_s : _i_rx_phy#sd_r;
    _$auto$rtlil#cc#2558#Mux$1194 := bool(_i_rx_phy#fs_ce) ? _$flatten#i_rx_phy#$or$usb_phy_1#v#1026$157_Y : _i_rx_phy#shift_en;
    _$auto$rtlil#cc#2558#Mux$1196 := bool(_$flatten#i_rx_phy#$and$usb_phy_1#v#1029$161_Y) ? (_i_rx_phy#sd_nrzi :: _i_rx_phy#hold_reg[7:1]) : _i_rx_phy#hold_reg;
    _$auto$rtlil#cc#2558#Mux$1198 := bool(_i_rx_phy#rst) ? _$flatten#i_tx_phy#$and$usb_phy_1#v#408$15_Y : 0ub1_0;
    _$auto$rtlil#cc#2558#Mux$1200 := bool(_i_tx_phy#tx_ip_sync) ? _$flatten#i_tx_phy#$2#sd_raw_o#0#0# : 0ub1_0;
    _$auto$rtlil#cc#2558#Mux$1204 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1202 : 0ub1_0;
    _$auto$rtlil#cc#2558#Mux$1208 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1206 : 0ub1_0;
    _$auto$rtlil#cc#2558#Mux$1212 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1210 : 0ub1_1;
    _$auto$rtlil#cc#2558#Mux$1216 := bool(_$auto$opt_dff#cc#253#combine_resets$1108) ? 0ub1_1 : _$auto$rtlil#cc#2558#Mux$1214;
    _$auto$rtlil#cc#2558#Mux$1220 := bool(_$auto$opt_dff#cc#253#combine_resets$1116) ? _$auto$rtlil#cc#2558#Mux$1218 : 0ub3_000;
    _$auto$rtlil#cc#2558#Mux$1224 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1222 : 0ub1_0;
    _$auto$rtlil#cc#2558#Mux$1228 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1226 : 0ub1_0;
    _$auto$rtlil#cc#2558#Mux$1232 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1230 : 0ub1_0;
    _$auto$rtlil#cc#2558#Mux$1236 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1234 : 0ub1_0;
    _$auto$rtlil#cc#2558#Mux$1240 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1238 : 0ub1_0;
    _$auto$rtlil#cc#2558#Mux$1244 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1242 : 0ub1_0;
    _$auto$rtlil#cc#2558#Mux$1248 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1246 : 0ub1_0;
    _$auto$rtlil#cc#2558#Mux$1252 := bool(_$auto$opt_dff#cc#253#combine_resets$1116) ? _$auto$rtlil#cc#2558#Mux$1250 : 0ub3_000;
    _$auto$rtlil#cc#2558#Mux$1256 := bool(_$auto$opt_dff#cc#253#combine_resets$1137) ? _$auto$rtlil#cc#2558#Mux$1254 : 0ub3_000;
    _$auto$rtlil#cc#2558#Mux$1260 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1258 : 0ub1_0;
    _$auto$rtlil#cc#2558#Mux$1264 := bool(_i_tx_phy#ld_sop_d) ? 0ub8_10000000 : _$auto$rtlil#cc#2558#Mux$1262;
    _$auto$rtlil#cc#2558#Mux$1268 := bool(_$auto$opt_dff#cc#253#combine_resets$1137) ? _$auto$rtlil#cc#2558#Mux$1266 : 0ub3_000;
    _$auto$rtlil#cc#2558#Mux$1272 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1270 : 0ub1_0;
    _$auto$rtlil#cc#2558#Mux$1276 := bool(_i_rx_phy#rx_valid) ? 0ub1_1 : _$auto$rtlil#cc#2558#Mux$1274;
    _$auto$rtlil#cc#2558#Mux$1280 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1278 : 0ub1_0;
    _$auto$rtlil#cc#2558#Mux$1284 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1282 : 0ub3_000;
    _$auto$rtlil#cc#2558#Mux$1288 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1286 : _i_rx_phy#synced_d;
    _$auto$rtlil#cc#2558#Mux$1292 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1290 : 0ub1_1;
    _$auto$rtlil#cc#2558#Mux$1296 := bool(_$auto$opt_dff#cc#253#combine_resets$1161) ? 0ub5_00000 : _$auto$rtlil#cc#2558#Mux$1294;
    _$auto$rtlil#cc#2558#Mux$1300 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1298 : _i_tx_phy#ld_eop_d;
    _$auto$rtlil#cc#2558#Mux$1304 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1302 : 0ub1_0;
    _$auto$rtlil#cc#2558#Mux$1308 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1306 : _i_tx_phy#ld_sop_d;
    _$auto$rtlil#cc#2558#Mux$1312 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1310 : 0ub3_000;
    _$auto$rtlil#cc#2558#Mux$1316 := bool(_i_rx_phy#rst) ? _$auto$rtlil#cc#2558#Mux$1314 : 0ub1_0;
    _$auto$opt_dff#cc#194#make_patterns_logic$1102 := resize(word1((_i_tx_phy#ld_eop_d :: _i_tx_phy#append_eop_sync2) != 0ub2_0), 1);
    _$auto$opt_dff#cc#194#make_patterns_logic$1120 := resize(word1(resize((_$flatten#i_tx_phy#$and$usb_phy_1#v#437$24_Y :: _TxValid_i), 2) != resize(0ub2_01, 2)), 1);
    _$auto$opt_dff#cc#194#make_patterns_logic$1124 := resize(word1((_i_tx_phy#ld_sop_d :: _i_tx_phy#append_eop_sync3) != 0ub2_0), 1);
    _$auto$opt_dff#cc#194#make_patterns_logic$1130 := resize(word1((_$flatten#i_rx_phy#$and$usb_phy_1#v#1047$173_Y :: _$flatten#i_rx_phy#$and$usb_phy_1#v#1049$176_Y) != 0ub2_0), 1);
    _$auto$opt_dff#cc#194#make_patterns_logic$1149 := resize(word1((_$flatten#i_rx_phy#$and$usb_phy_1#v#980$140_Y :: _$flatten#i_rx_phy#$and$usb_phy_1#v#982$141_Y) != 0ub2_0), 1);
    _$auto$opt_dff#cc#194#make_patterns_logic$1152 := resize(word1(resize((_$flatten#i_rx_phy#$and$usb_phy_1#v#937$130_Y :: _$procmux$367_CMP), 2) != resize(0ub2_01, 2)), 1);
    _$auto$opt_dff#cc#194#make_patterns_logic$1168 := resize(word1(resize((_$procmux$896_CMP :: _TxValid_i), 2) != resize(0ub2_10, 2)), 1);
    _$auto$opt_dff#cc#194#make_patterns_logic$1170 := resize(word1(resize((_$procmux$784_CMP :: _$flatten#i_tx_phy#$and$usb_phy_1#v#635$94_Y), 2) != resize(0ub2_10, 2)), 1);
    _$auto$opt_dff#cc#194#make_patterns_logic$1172 := resize(word1(resize((_$procmux$807_CMP :: _$flatten#i_tx_phy#$and$usb_phy_1#v#619$91_Y), 2) != resize(0ub2_10, 2)), 1);
    _$auto$opt_dff#cc#194#make_patterns_logic$1174 := resize(word1(resize((_$procmux$795_CMP :: _i_tx_phy#append_eop_sync3), 2) != resize(0ub2_10, 2)), 1);
    _$auto$opt_dff#cc#194#make_patterns_logic$1176 := resize(word1(resize((_$procmux$856_CMP :: _i_tx_phy#sft_done_e), 2) != resize(0ub2_10, 2)), 1);
    _$auto$opt_dff#cc#194#make_patterns_logic$1178 := resize(word1(resize((_$procmux$774_CMP :: _i_rx_phy#fs_ce), 2) != resize(0ub2_10, 2)), 1);
    _$auto$opt_dff#cc#194#make_patterns_logic$1180 := resize(word1((_$procmux$896_CMP :: _$procmux$856_CMP :: _$procmux$807_CMP :: _$procmux$795_CMP :: _$procmux$784_CMP :: _$procmux$774_CMP) != 0ub6_0), 1);
    _$auto$rtlil#cc#2461#Not$1112 := !resize(_i_tx_phy#sd_bs_o, 1);
    _$auto$opt_dff#cc#219#make_patterns_logic$1113 := resize(word1((_$auto$rtlil#cc#2461#Not$1112 :: _i_rx_phy#fs_ce) = !0ub2_0), 1);
    _$auto$opt_dff#cc#219#make_patterns_logic$1154 := resize(word1((_$auto$opt_dff#cc#194#make_patterns_logic$1152 :: _i_rx_phy#fs_ce) = !0ub2_0), 1);
    _$auto$opt_dff#cc#219#make_patterns_logic$1182 := resize(word1((_$auto$opt_dff#cc#194#make_patterns_logic$1168 :: _$auto$opt_dff#cc#194#make_patterns_logic$1170 :: _$auto$opt_dff#cc#194#make_patterns_logic$1172 :: _$auto$opt_dff#cc#194#make_patterns_logic$1174 :: _$auto$opt_dff#cc#194#make_patterns_logic$1176 :: _$auto$opt_dff#cc#194#make_patterns_logic$1178 :: _$auto$opt_dff#cc#194#make_patterns_logic$1180) = !0ub7_0), 1);
    _$auto$rtlil#cc#2461#Not$1107 := !resize(_i_rx_phy#rst, 1);
    _$auto$rtlil#cc#2461#Not$1160 := !resize(_rst, 1);
    _$auto$opt_dff#cc#253#combine_resets$1108 := resize(word1((_$auto$rtlil#cc#2461#Not$1107 :: _$flatten#i_tx_phy#$or$usb_phy_1#v#515$58_Y) != 0ub2_0), 1);
    _$auto$opt_dff#cc#253#combine_resets$1116 := resize(word1((_i_rx_phy#rst :: _i_tx_phy#tx_ip_sync) = !0ub2_0), 1);
    _$auto$opt_dff#cc#253#combine_resets$1137 := resize(word1((_i_rx_phy#rst :: _i_rx_phy#shift_en) = !0ub2_0), 1);
    _$auto$opt_dff#cc#253#combine_resets$1161 := resize(word1((_$auto$rtlil#cc#2461#Not$1160 :: _$ne$usb_phy_1#v#221$5_Y) != 0ub2_0), 1);
    _$auto$opt_reduce#cc#134#opt_pmux$1059 := resize(word1((_$procmux$258_CMP :: _$procmux$274_CMP :: _$procmux$301_CMP :: _$procmux$316_CMP :: _$procmux$332_CMP :: _$procmux$349_CMP :: _$procmux$367_CMP) != 0ub7_0), 1);
    _$auto$opt_reduce#cc#134#opt_pmux$1061 := resize(word1((_$procmux$185_CMP :: _$procmux$194_CMP :: _$procmux$215_CMP) != 0ub3_0), 1);
    _$0#usb_rst#0#0# := resize(word1(resize(_rst_cnt, 5) = resize(0ub5_11111, 5)), 1);
    _$flatten#i_rx_phy#$add$usb_phy_1#v#1015$154_Y := resize(_i_rx_phy#one_cnt, 3) + resize(0ub3_001, 3);
    _$flatten#i_rx_phy#$add$usb_phy_1#v#1042$167_Y := resize(_i_rx_phy#bit_cnt, 3) + resize(0ub3_001, 3);
    _$flatten#i_rx_phy#$and$usb_phy_1#v#1000$146_Y := resize(_i_rx_phy#rx_active, 1) & resize(_i_rx_phy#fs_ce, 1);
    _$flatten#i_rx_phy#$and$usb_phy_1#v#1029$159_Y := resize(_i_rx_phy#fs_ce, 1) & resize(_i_rx_phy#shift_en, 1);
    _$flatten#i_rx_phy#$and$usb_phy_1#v#1029$161_Y := resize(_$flatten#i_rx_phy#$and$usb_phy_1#v#1029$159_Y, 1) & resize(_$flatten#i_rx_phy#$logic_not$usb_phy_1#v#1029$160_Y, 1);
    _$flatten#i_rx_phy#$and$usb_phy_1#v#1042$166_Y := resize(_i_rx_phy#fs_ce, 1) & resize(_$flatten#i_rx_phy#$logic_not$usb_phy_1#v#1029$160_Y, 1);
    _$flatten#i_rx_phy#$and$usb_phy_1#v#1047$173_Y := resize(_$flatten#i_rx_phy#$and$usb_phy_1#v#1042$166_Y, 1) & resize(_$flatten#i_rx_phy#$eq$usb_phy_1#v#1047$172_Y, 1);
    _$flatten#i_rx_phy#$and$usb_phy_1#v#1049$174_Y := resize(_i_rx_phy#rx_valid1, 1) & resize(_i_rx_phy#fs_ce, 1);
    _$flatten#i_rx_phy#$and$usb_phy_1#v#1049$176_Y := resize(_$flatten#i_rx_phy#$and$usb_phy_1#v#1049$174_Y, 1) & resize(_$flatten#i_rx_phy#$logic_not$usb_phy_1#v#1029$160_Y, 1);
    _$flatten#i_rx_phy#$and$usb_phy_1#v#1052$179_Y := resize(_$flatten#i_rx_phy#$logic_not$usb_phy_1#v#1029$160_Y, 1) & resize(_i_rx_phy#rx_valid1, 1);
    _$flatten#i_rx_phy#$0#rx_valid#0#0# := resize(_$flatten#i_rx_phy#$and$usb_phy_1#v#1052$179_Y, 1) & resize(_i_rx_phy#fs_ce, 1);
    _i_rx_phy#k := resize(_$flatten#i_rx_phy#$logic_not$usb_phy_1#v#856$106_Y, 1) & resize(_i_rx_phy#rxdn_s1r, 1);
    _i_rx_phy#j := resize(_i_rx_phy#rxdp_s1r, 1) & resize(_$flatten#i_rx_phy#$logic_not$usb_phy_1#v#857$108_Y, 1);
    _i_rx_phy#se0 := resize(_$flatten#i_rx_phy#$logic_not$usb_phy_1#v#856$106_Y, 1) & resize(_$flatten#i_rx_phy#$logic_not$usb_phy_1#v#857$108_Y, 1);
    _$flatten#i_rx_phy#$and$usb_phy_1#v#894$120_Y := resize(_i_rx_phy#rx_en, 1) & resize(_i_rx_phy#change, 1);
    _$flatten#i_rx_phy#$and$usb_phy_1#v#937$130_Y := resize(_i_rx_phy#k, 1) & resize(_i_rx_phy#rx_en, 1);
    _$flatten#i_rx_phy#$and$usb_phy_1#v#940$131_Y := resize(_i_rx_phy#j, 1) & resize(_i_rx_phy#rx_en, 1);
    _$flatten#i_rx_phy#$and$usb_phy_1#v#980$140_Y := resize(_i_rx_phy#synced_d, 1) & resize(_i_rx_phy#rx_en, 1);
    _$flatten#i_rx_phy#$and$usb_phy_1#v#982$141_Y := resize(_i_rx_phy#se0, 1) & resize(_i_rx_phy#rx_valid_r, 1);
    _i_rx_phy#drop_bit := resize(word1(resize(_i_rx_phy#one_cnt, 3) = resize(0ub3_110, 3)), 1);
    _$flatten#i_rx_phy#$eq$usb_phy_1#v#1047$172_Y := resize(word1(resize(_i_rx_phy#bit_cnt, 3) = resize(0ub3_111, 3)), 1);
    _$flatten#i_rx_phy#$logic_not$usb_phy_1#v#1000$148_Y := resize(word1((_$flatten#i_rx_phy#$xor$usb_phy_1#v#1000$147_Y = 0ub1_0)), 1);
    _$flatten#i_rx_phy#$logic_not$usb_phy_1#v#1014$152_Y := resize(word1((_i_rx_phy#sd_nrzi = 0ub1_0)), 1);
    _$flatten#i_rx_phy#$logic_not$usb_phy_1#v#1029$160_Y := resize(word1((_i_rx_phy#drop_bit = 0ub1_0)), 1);
    _$flatten#i_rx_phy#$logic_not$usb_phy_1#v#857$108_Y := resize(word1((_i_rx_phy#rxdn_s1r = 0ub1_0)), 1);
    _$flatten#i_rx_phy#$logic_not$usb_phy_1#v#856$106_Y := resize(word1((_i_rx_phy#rxdp_s1r = 0ub1_0)), 1);
    _$flatten#i_rx_phy#$ne$usb_phy_1#v#884$115_Y := resize(word1(resize(_i_rx_phy#rxdp_s1r, 1) != resize(_i_rx_phy#rxdp_s1, 1)), 1);
    _$flatten#i_rx_phy#$ne$usb_phy_1#v#884$116_Y := resize(word1(resize(_i_rx_phy#rxdn_s1r, 1) != resize(_i_rx_phy#rxdn_s1, 1)), 1);
    _$flatten#i_rx_phy#$or$usb_phy_1#v#1014$153_Y := resize(_$flatten#i_rx_phy#$logic_not$usb_phy_1#v#1014$152_Y, 1) | resize(_i_rx_phy#drop_bit, 1);
    _$flatten#i_rx_phy#$or$usb_phy_1#v#1026$157_Y := resize(_i_rx_phy#synced_d, 1) | resize(_i_rx_phy#rx_active, 1);
    _i_rx_phy#change := resize(_$flatten#i_rx_phy#$ne$usb_phy_1#v#884$115_Y, 1) | resize(_$flatten#i_rx_phy#$ne$usb_phy_1#v#884$116_Y, 1);
    _$flatten#i_rx_phy#$xor$usb_phy_1#v#1000$147_Y := resize(_i_rx_phy#rxd_s, 1) xor resize(_i_rx_phy#sd_r, 1);
    _$flatten#i_tx_phy#$add$usb_phy_1#v#451$31_Y := resize(_i_tx_phy#bit_cnt, 3) + resize(0ub3_001, 3);
    _$flatten#i_tx_phy#$add$usb_phy_1#v#496$47_Y := resize(_i_tx_phy#one_cnt, 3) + resize(0ub3_001, 3);
    _$flatten#i_tx_phy#$and$usb_phy_1#v#408$15_Y := resize(_i_tx_phy#tx_ready_d, 1) & resize(_TxValid_i, 1);
    _$flatten#i_tx_phy#$and$usb_phy_1#v#437$24_Y := resize(_TxValid_i, 1) & resize(_$flatten#i_tx_phy#$logic_not$usb_phy_1#v#437$23_Y, 1);
    _$flatten#i_tx_phy#$and$usb_phy_1#v#451$30_Y := resize(_i_rx_phy#fs_ce, 1) & resize(_$flatten#i_tx_phy#$logic_not$usb_phy_1#v#451$29_Y, 1);
    _$flatten#i_tx_phy#$0#sft_done#0#0# := resize(_$flatten#i_tx_phy#$logic_not$usb_phy_1#v#451$29_Y, 1) & resize(_$flatten#i_tx_phy#$eq$usb_phy_1#v#470$36_Y, 1);
    _i_tx_phy#sft_done_e := resize(_i_tx_phy#sft_done, 1) & resize(_$flatten#i_tx_phy#$logic_not$usb_phy_1#v#475$39_Y, 1);
    _$flatten#i_tx_phy#$and$usb_phy_1#v#577$80_Y := resize(_$flatten#i_tx_phy#$logic_not$usb_phy_1#v#577$79_Y, 1) & resize(_i_tx_phy#sd_nrzi_o, 1);
    _$flatten#i_tx_phy#$and$usb_phy_1#v#584$86_Y := resize(_$flatten#i_tx_phy#$logic_not$usb_phy_1#v#577$79_Y, 1) & resize(_$flatten#i_tx_phy#$not$usb_phy_1#v#517$59_Y, 1);
    _$flatten#i_tx_phy#$and$usb_phy_1#v#619$91_Y := resize(_$flatten#i_tx_phy#$logic_not$usb_phy_1#v#619$90_Y, 1) & resize(_i_tx_phy#sft_done_e, 1);
    _$flatten#i_tx_phy#$and$usb_phy_1#v#625$92_Y := resize(_i_tx_phy#data_done, 1) & resize(_i_tx_phy#sft_done_e, 1);
    _$flatten#i_tx_phy#$and$usb_phy_1#v#635$94_Y := resize(_$flatten#i_tx_phy#$logic_not$usb_phy_1#v#577$79_Y, 1) & resize(_i_rx_phy#fs_ce, 1);
    _i_tx_phy#hold := resize(word1(resize(_i_tx_phy#one_cnt, 3) = resize(0ub3_110, 3)), 1);
    _$flatten#i_tx_phy#$logic_not$usb_phy_1#v#437$23_Y := resize(word1((_i_tx_phy#tx_ip = 0ub1_0)), 1);
    _$flatten#i_tx_phy#$logic_not$usb_phy_1#v#449$28_Y := resize(word1((_i_tx_phy#tx_ip_sync = 0ub1_0)), 1);
    _$flatten#i_tx_phy#$logic_not$usb_phy_1#v#451$29_Y := resize(word1((_i_tx_phy#hold = 0ub1_0)), 1);
    _$flatten#i_tx_phy#$logic_not$usb_phy_1#v#475$39_Y := resize(word1((_i_tx_phy#sft_done_r = 0ub1_0)), 1);
    _$flatten#i_tx_phy#$logic_not$usb_phy_1#v#495$45_Y := resize(word1((_i_tx_phy#sd_raw_o = 0ub1_0)), 1);
    _$flatten#i_tx_phy#$logic_not$usb_phy_1#v#515$57_Y := resize(word1((_i_tx_phy#txoe_r1 = 0ub1_0)), 1);
    _$flatten#i_tx_phy#$logic_not$usb_phy_1#v#566$76_Y := resize(word1((_$flatten#i_tx_phy#$or$usb_phy_1#v#566$75_Y = 0ub1_0)), 1);
    _$flatten#i_tx_phy#$logic_not$usb_phy_1#v#577$79_Y := resize(word1((_i_tx_phy#append_eop_sync3 = 0ub1_0)), 1);
    _$flatten#i_tx_phy#$logic_not$usb_phy_1#v#619$90_Y := resize(word1((_i_tx_phy#data_done = 0ub1_0)), 1);
    _$flatten#i_tx_phy#$not$usb_phy_1#v#517$59_Y := !resize(_i_tx_phy#sd_nrzi_o, 1);
    _$flatten#i_tx_phy#$or$usb_phy_1#v#495$46_Y := resize(_$flatten#i_tx_phy#$logic_not$usb_phy_1#v#495$45_Y, 1) | resize(_i_tx_phy#hold, 1);
    _$flatten#i_tx_phy#$or$usb_phy_1#v#515$58_Y := resize(_$flatten#i_tx_phy#$logic_not$usb_phy_1#v#449$28_Y, 1) | resize(_$flatten#i_tx_phy#$logic_not$usb_phy_1#v#515$57_Y, 1);
    _$flatten#i_tx_phy#$or$usb_phy_1#v#566$75_Y := resize(_i_tx_phy#txoe_r1, 1) | resize(_i_tx_phy#txoe_r2, 1);
    _$flatten#i_tx_phy#$ternary$usb_phy_1#v#504$53_Y := bool(_i_tx_phy#tx_ip_sync) ? _$flatten#i_tx_phy#$ternary$usb_phy_1#v#505$52_Y : 0ub1_0;
    _$flatten#i_tx_phy#$ternary$usb_phy_1#v#505$52_Y := bool(_i_tx_phy#hold) ? 0ub1_0 : _i_tx_phy#sd_raw_o;
    _$flatten#i_tx_phy#$ternary$usb_phy_1#v#576$81_Y := bool(_phy_tx_mode) ? _$flatten#i_tx_phy#$and$usb_phy_1#v#577$80_Y : _i_tx_phy#sd_nrzi_o;
    _$flatten#i_tx_phy#$ternary$usb_phy_1#v#583$87_Y := bool(_phy_tx_mode) ? _$flatten#i_tx_phy#$and$usb_phy_1#v#584$86_Y : _i_tx_phy#append_eop_sync3;
    _$logic_not$usb_phy_1#v#223$6_Y := resize(word1((_usb_rst = 0ub1_0)), 1);
    _$ne$usb_phy_1#v#221$5_Y := resize(word1((_i_rx_phy#rxdp_s1 :: _i_rx_phy#rxdn_s1) != 0ub2_0), 1);
    _$not$usb_phy_1#v#165$1_Y := !resize(_usb_rst, 1);
    _$flatten#i_rx_phy#$5#dpll_state#1#0# := bool(_$flatten#i_rx_phy#$and$usb_phy_1#v#894$120_Y) ? 0ub2_00 : 0ub2_11;
    _$flatten#i_rx_phy#$4#dpll_state#1#0# := bool(_$flatten#i_rx_phy#$and$usb_phy_1#v#894$120_Y) ? 0ub2_11 : 0ub2_10;
    _$flatten#i_rx_phy#$3#dpll_state#1#0# := bool(_$flatten#i_rx_phy#$and$usb_phy_1#v#894$120_Y) ? 0ub2_00 : 0ub2_01;
    _$flatten#i_rx_phy#$2#dpll_state#1#0# := bool(_$procmux$185_CMP) ? 0ub2_00 : bool(_$procmux$194_CMP) ? _$flatten#i_rx_phy#$5#dpll_state#1#0# : bool(_$procmux$204_CMP) ? _$flatten#i_rx_phy#$4#dpll_state#1#0# : bool(_$procmux$215_CMP) ? _$flatten#i_rx_phy#$3#dpll_state#1#0# : 0ub2_00;
    _$flatten#i_rx_phy#$2#fs_ce_d#0#0# := bool(_$auto$opt_reduce#cc#134#opt_pmux$1061) ? 0ub1_0 : bool(_$procmux$204_CMP) ? 0ub1_1 : 0ub1_0;
    _$procmux$185_CMP := resize(word1(resize(_i_rx_phy#dpll_state, 2) = resize(0ub2_11, 2)), 1);
    _$procmux$194_CMP := resize(word1(resize(_i_rx_phy#dpll_state, 2) = resize(0ub2_10, 2)), 1);
    _$procmux$204_CMP := resize(word1(resize(_i_rx_phy#dpll_state, 2) = resize(0ub2_01, 2)), 1);
    _$procmux$215_CMP := resize(word1((_i_rx_phy#dpll_state = 0ub2_0)), 1);
    _$flatten#i_rx_phy#$4#synced_d#0#0# := bool(_i_rx_phy#k) ? 0ub1_1 : 0ub1_0;
    _$flatten#i_rx_phy#$10#fs_state#2#0# := bool(_$flatten#i_rx_phy#$and$usb_phy_1#v#937$130_Y) ? 0ub3_111 : 0ub3_000;
    _$flatten#i_rx_phy#$9#fs_state#2#0# := bool(_$flatten#i_rx_phy#$and$usb_phy_1#v#940$131_Y) ? 0ub3_110 : _$flatten#i_rx_phy#$10#fs_state#2#0#;
    _$flatten#i_rx_phy#$8#fs_state#2#0# := bool(_$flatten#i_rx_phy#$and$usb_phy_1#v#937$130_Y) ? 0ub3_101 : 0ub3_000;
    _$flatten#i_rx_phy#$7#fs_state#2#0# := bool(_$flatten#i_rx_phy#$and$usb_phy_1#v#940$131_Y) ? 0ub3_100 : 0ub3_000;
    _$flatten#i_rx_phy#$6#fs_state#2#0# := bool(_$flatten#i_rx_phy#$and$usb_phy_1#v#937$130_Y) ? 0ub3_011 : 0ub3_000;
    _$flatten#i_rx_phy#$5#fs_state#2#0# := bool(_$flatten#i_rx_phy#$and$usb_phy_1#v#940$131_Y) ? 0ub3_010 : 0ub3_000;
    _$flatten#i_rx_phy#$4#fs_state#2#0# := bool(_$flatten#i_rx_phy#$and$usb_phy_1#v#937$130_Y) ? 0ub3_001 : 0ub3_000;
    _$flatten#i_rx_phy#$3#fs_state#2#0# := bool(_$procmux$246_CMP) ? 0ub3_000 : bool(_$procmux$258_CMP) ? _$flatten#i_rx_phy#$10#fs_state#2#0# : bool(_$procmux$274_CMP) ? _$flatten#i_rx_phy#$9#fs_state#2#0# : bool(_$procmux$301_CMP) ? _$flatten#i_rx_phy#$8#fs_state#2#0# : bool(_$procmux$316_CMP) ? _$flatten#i_rx_phy#$7#fs_state#2#0# : bool(_$procmux$332_CMP) ? _$flatten#i_rx_phy#$6#fs_state#2#0# : bool(_$procmux$349_CMP) ? _$flatten#i_rx_phy#$5#fs_state#2#0# : bool(_$procmux$367_CMP) ? _$flatten#i_rx_phy#$4#fs_state#2#0# : 0ub3_000;
    _$flatten#i_rx_phy#$3#synced_d#0#0# := bool(_$procmux$246_CMP) ? _$flatten#i_rx_phy#$4#synced_d#0#0# : bool(_$auto$opt_reduce#cc#134#opt_pmux$1059) ? 0ub1_0 : 0ub1_0;
    _$procmux$246_CMP := resize(word1(resize(_i_rx_phy#fs_state, 3) = resize(0ub3_111, 3)), 1);
    _$procmux$258_CMP := resize(word1(resize(_i_rx_phy#fs_state, 3) = resize(0ub3_110, 3)), 1);
    _$procmux$274_CMP := resize(word1(resize(_i_rx_phy#fs_state, 3) = resize(0ub3_101, 3)), 1);
    _$procmux$301_CMP := resize(word1(resize(_i_rx_phy#fs_state, 3) = resize(0ub3_100, 3)), 1);
    _$procmux$316_CMP := resize(word1(resize(_i_rx_phy#fs_state, 3) = resize(0ub3_011, 3)), 1);
    _$procmux$332_CMP := resize(word1(resize(_i_rx_phy#fs_state, 3) = resize(0ub3_010, 3)), 1);
    _$procmux$349_CMP := resize(word1(resize(_i_rx_phy#fs_state, 3) = resize(0ub3_001, 3)), 1);
    _$procmux$367_CMP := resize(word1((_i_rx_phy#fs_state = 0ub3_0)), 1);
    _$flatten#i_rx_phy#$3#rx_active#0#0# := bool(_$flatten#i_rx_phy#$and$usb_phy_1#v#982$141_Y) ? 0ub1_0 : 0ub1_0;
    _$flatten#i_rx_phy#$2#rx_active#0#0# := bool(_$flatten#i_rx_phy#$and$usb_phy_1#v#980$140_Y) ? 0ub1_1 : _$flatten#i_rx_phy#$3#rx_active#0#0#;
    _$flatten#i_rx_phy#$4#one_cnt#2#0# := bool(_$flatten#i_rx_phy#$or$usb_phy_1#v#1014$153_Y) ? 0ub3_000 : _$flatten#i_rx_phy#$add$usb_phy_1#v#1015$154_Y;
    _$flatten#i_rx_phy#$3#rx_valid1#0#0# := bool(_$flatten#i_rx_phy#$and$usb_phy_1#v#1049$176_Y) ? 0ub1_0 : 0ub1_0;
    _$flatten#i_rx_phy#$2#rx_valid1#0#0# := bool(_$flatten#i_rx_phy#$and$usb_phy_1#v#1047$173_Y) ? 0ub1_1 : _$flatten#i_rx_phy#$3#rx_valid1#0#0#;
    _$flatten#i_tx_phy#$3#tx_ip#0#0# := bool(_i_tx_phy#append_eop_sync3) ? 0ub1_0 : 0ub1_0;
    _$flatten#i_tx_phy#$2#tx_ip#0#0# := bool(_i_tx_phy#ld_sop_d) ? 0ub1_1 : _$flatten#i_tx_phy#$3#tx_ip#0#0#;
    _$flatten#i_tx_phy#$3#data_done#0#0# := bool(_TxValid_i) ? 0ub1_0 : 0ub1_0;
    _$flatten#i_tx_phy#$2#data_done#0#0# := bool(_$flatten#i_tx_phy#$and$usb_phy_1#v#437$24_Y) ? 0ub1_1 : _$flatten#i_tx_phy#$3#data_done#0#0#;
    _$flatten#i_tx_phy#$2#sd_raw_o#0#0# := bool(_$flatten#i_tx_phy#$eq$usb_phy_1#v#470$36_Y) ? _i_tx_phy#hold_reg[7:7] : bool(_$procmux$600_CMP) ? _i_tx_phy#hold_reg[6:6] : bool(_$procmux$601_CMP) ? _i_tx_phy#hold_reg[5:5] : bool(_$procmux$602_CMP) ? _i_tx_phy#hold_reg[4:4] : bool(_$procmux$603_CMP) ? _i_tx_phy#hold_reg[3:3] : bool(_$procmux$604_CMP) ? _i_tx_phy#hold_reg[2:2] : bool(_$procmux$605_CMP) ? _i_tx_phy#hold_reg[1:1] : bool(_$procmux$606_CMP) ? _i_tx_phy#hold_reg[0:0] : 0ub1_0;
    _$flatten#i_tx_phy#$eq$usb_phy_1#v#470$36_Y := resize(word1(resize(_i_tx_phy#bit_cnt, 3) = resize(0ub3_111, 3)), 1);
    _$procmux$600_CMP := resize(word1(resize(_i_tx_phy#bit_cnt, 3) = resize(0ub3_110, 3)), 1);
    _$procmux$601_CMP := resize(word1(resize(_i_tx_phy#bit_cnt, 3) = resize(0ub3_101, 3)), 1);
    _$procmux$602_CMP := resize(word1(resize(_i_tx_phy#bit_cnt, 3) = resize(0ub3_100, 3)), 1);
    _$procmux$603_CMP := resize(word1(resize(_i_tx_phy#bit_cnt, 3) = resize(0ub3_011, 3)), 1);
    _$procmux$604_CMP := resize(word1(resize(_i_tx_phy#bit_cnt, 3) = resize(0ub3_010, 3)), 1);
    _$procmux$605_CMP := resize(word1(resize(_i_tx_phy#bit_cnt, 3) = resize(0ub3_001, 3)), 1);
    _$procmux$606_CMP := resize(word1((_i_tx_phy#bit_cnt = 0ub3_0)), 1);
    _$flatten#i_tx_phy#$4#one_cnt#2#0# := bool(_$flatten#i_tx_phy#$or$usb_phy_1#v#495$46_Y) ? 0ub3_000 : _$flatten#i_tx_phy#$add$usb_phy_1#v#496$47_Y;
    _$flatten#i_tx_phy#$3#append_eop#0#0# := bool(_i_tx_phy#append_eop_sync2) ? 0ub1_0 : 0ub1_0;
    _$flatten#i_tx_phy#$2#append_eop#0#0# := bool(_i_tx_phy#ld_eop_d) ? 0ub1_1 : _$flatten#i_tx_phy#$3#append_eop#0#0#;
    _$flatten#i_tx_phy#$8#state#2#0# := bool(_i_rx_phy#fs_ce) ? 0ub3_000 : 0ub3_000;
    _$flatten#i_tx_phy#$7#state#2#0# := bool(_$flatten#i_tx_phy#$and$usb_phy_1#v#635$94_Y) ? 0ub3_110 : 0ub3_000;
    _$flatten#i_tx_phy#$6#state#2#0# := bool(_i_tx_phy#append_eop_sync3) ? 0ub3_101 : 0ub3_000;
    _$flatten#i_tx_phy#$4#ld_data_d#0#0# := bool(_$flatten#i_tx_phy#$and$usb_phy_1#v#625$92_Y) ? 0ub1_1 : 0ub1_0;
    _$flatten#i_tx_phy#$5#state#2#0# := bool(_$flatten#i_tx_phy#$and$usb_phy_1#v#619$91_Y) ? 0ub3_100 : 0ub3_000;
    _$flatten#i_tx_phy#$3#ld_eop_d#0#0# := bool(_$flatten#i_tx_phy#$and$usb_phy_1#v#619$91_Y) ? 0ub1_1 : 0ub1_0;
    _$flatten#i_tx_phy#$4#state#2#0# := bool(_i_tx_phy#sft_done_e) ? 0ub3_011 : 0ub3_000;
    _$flatten#i_tx_phy#$3#ld_data_d#0#0# := bool(_i_tx_phy#sft_done_e) ? 0ub1_1 : 0ub1_0;
    _$flatten#i_tx_phy#$3#state#2#0# := bool(_TxValid_i) ? 0ub3_001 : 0ub3_000;
    _$flatten#i_tx_phy#$3#ld_sop_d#0#0# := bool(_TxValid_i) ? 0ub1_1 : 0ub1_0;
    _$flatten#i_tx_phy#$2#state#2#0# := bool(_$procmux$774_CMP) ? _$flatten#i_tx_phy#$8#state#2#0# : bool(_$procmux$784_CMP) ? _$flatten#i_tx_phy#$7#state#2#0# : bool(_$procmux$795_CMP) ? _$flatten#i_tx_phy#$6#state#2#0# : bool(_$procmux$807_CMP) ? _$flatten#i_tx_phy#$5#state#2#0# : bool(_$procmux$856_CMP) ? _$flatten#i_tx_phy#$4#state#2#0# : bool(_$procmux$896_CMP) ? _$flatten#i_tx_phy#$3#state#2#0# : 0ub3_000;
    _$procmux$774_CMP := resize(word1(resize(_i_tx_phy#state, 3) = resize(0ub3_110, 3)), 1);
    _$procmux$784_CMP := resize(word1(resize(_i_tx_phy#state, 3) = resize(0ub3_101, 3)), 1);
    _$procmux$795_CMP := resize(word1(resize(_i_tx_phy#state, 3) = resize(0ub3_100, 3)), 1);
    _$procmux$896_CMP := resize(word1((_i_tx_phy#state = 0ub3_0)), 1);
    _$flatten#i_tx_phy#$2#ld_data_d#0#0# := bool(_$procmux$807_CMP) ? _$flatten#i_tx_phy#$4#ld_data_d#0#0# : bool(_$procmux$856_CMP) ? _$flatten#i_tx_phy#$3#ld_data_d#0#0# : 0ub1_0;
    _$procmux$807_CMP := resize(word1(resize(_i_tx_phy#state, 3) = resize(0ub3_011, 3)), 1);
    _$procmux$856_CMP := resize(word1(resize(_i_tx_phy#state, 3) = resize(0ub3_001, 3)), 1);
    _txoe := _i_tx_phy#txoe;
    _txdp := _i_tx_phy#txdp;
    _txdn := _i_tx_phy#txdn;
    _reset := _i_rx_phy#rst;
    _i_tx_phy#stuff := _i_tx_phy#hold;
    _i_tx_phy#rst := _i_rx_phy#rst;
    _i_tx_phy#phy_mode := _phy_tx_mode;
    _i_tx_phy#ld_data_d := _i_tx_phy#tx_ready_d;
    _i_tx_phy#fs_ce := _i_rx_phy#fs_ce;
    _i_tx_phy#eop_done := _i_tx_phy#append_eop_sync3;
    _i_tx_phy#clk := _clk;
    _i_tx_phy#TxValid_i := _TxValid_i;
    _i_tx_phy#DataOut_i := _DataOut_i;
    _i_rx_phy#rxdp_s := _i_rx_phy#rxdp_s1r;
    _i_rx_phy#rxdp := _rxdp;
    _i_rx_phy#rxdn_s := _i_rx_phy#rxdn_s1r;
    _i_rx_phy#rxdn := _rxdn;
    _i_rx_phy#rxd := _rxd;
    _i_rx_phy#lock_en := _i_rx_phy#rx_en;
    _i_rx_phy#clk := _clk;
    _i_rx_phy#RxValid_o := _i_rx_phy#rx_valid;
    _i_rx_phy#RxError_o := 0ub1_0;
    _i_rx_phy#RxEn_i := _i_tx_phy#txoe;
    _i_rx_phy#RxActive_o := _i_rx_phy#rx_active;
    _i_rx_phy#LineState := (_i_rx_phy#rxdp_s1 :: _i_rx_phy#rxdn_s1);
    _i_rx_phy#DataIn_o := _i_rx_phy#hold_reg;
    _fs_ce := _i_rx_phy#fs_ce;
    _TxReady_o := _i_tx_phy#TxReady_o;
    _RxValid_o := _i_rx_phy#rx_valid;
    _RxError_o := 0ub1_0;
    _RxActive_o := _i_rx_phy#rx_active;
    _LineState_o := (_i_rx_phy#rxdp_s1 :: _i_rx_phy#rxdn_s1);
    _DataIn_o := _i_rx_phy#hold_reg;
  ASSIGN
    init(_i_rx_phy#bit_cnt) := 0ub3_000;
    init(_i_rx_phy#dpll_state) := 0ub2_01;
    init(_i_rx_phy#fs_ce) := 0ub1_0;
    init(_i_rx_phy#fs_ce_d) := 0ub1_0;
    init(_i_rx_phy#fs_ce_r1) := 0ub1_0;
    init(_i_rx_phy#fs_ce_r2) := 0ub1_0;
    init(_i_rx_phy#fs_ce_r3) := 0ub1_0;
    init(_i_rx_phy#fs_state) := 0ub3_000;
    init(_i_rx_phy#hold_reg) := 0ub8_00000000;
    init(_i_rx_phy#one_cnt) := 0ub3_000;
    init(_i_rx_phy#rx_active) := 0ub1_0;
    init(_i_rx_phy#rx_en) := 0ub1_0;
    init(_i_rx_phy#rx_valid) := 0ub1_0;
    init(_i_rx_phy#rx_valid1) := 0ub1_0;
    init(_i_rx_phy#rx_valid_r) := 0ub1_0;
    init(_i_rx_phy#rxd_s) := 0ub1_0;
    init(_i_rx_phy#rxd_s1) := 0ub1_0;
    init(_i_rx_phy#rxd_t1) := 0ub1_0;
    init(_i_rx_phy#rxdn_s1) := 0ub1_0;
    init(_i_rx_phy#rxdn_s1r) := 0ub1_0;
    init(_i_rx_phy#rxdn_t1) := 0ub1_0;
    init(_i_rx_phy#rxdp_s1) := 0ub1_0;
    init(_i_rx_phy#rxdp_s1r) := 0ub1_0;
    init(_i_rx_phy#rxdp_t1) := 0ub1_0;
    init(_i_rx_phy#sd_nrzi) := 0ub1_0;
    init(_i_rx_phy#sd_r) := 0ub1_0;
    init(_i_rx_phy#shift_en) := 0ub1_0;
    init(_i_rx_phy#synced_d) := 0ub1_0;
    init(_i_tx_phy#TxReady_o) := 0ub1_0;
    init(_i_tx_phy#append_eop) := 0ub1_0;
    init(_i_tx_phy#append_eop_sync1) := 0ub1_0;
    init(_i_tx_phy#append_eop_sync2) := 0ub1_0;
    init(_i_tx_phy#append_eop_sync3) := 0ub1_0;
    init(_i_tx_phy#bit_cnt) := 0ub3_000;
    init(_i_tx_phy#data_done) := 0ub1_0;
    init(_i_tx_phy#hold_reg) := 0ub8_00000000;
    init(_i_tx_phy#ld_data) := 0ub1_0;
    init(_i_tx_phy#ld_eop_d) := 0ub1_0;
    init(_i_tx_phy#ld_sop_d) := 0ub1_0;
    init(_i_tx_phy#one_cnt) := 0ub3_000;
    init(_i_tx_phy#sd_bs_o) := 0ub1_0;
    init(_i_tx_phy#sd_nrzi_o) := 0ub1_1;
    init(_i_tx_phy#sd_raw_o) := 0ub1_0;
    init(_i_tx_phy#sft_done) := 0ub1_0;
    init(_i_tx_phy#sft_done_r) := 0ub1_0;
    init(_i_tx_phy#state) := 0ub3_000;
    init(_i_tx_phy#tx_ip) := 0ub1_0;
    init(_i_tx_phy#tx_ip_sync) := 0ub1_0;
    init(_i_tx_phy#tx_ready_d) := 0ub1_0;
    init(_i_tx_phy#txdn) := 0ub1_0;
    init(_i_tx_phy#txdp) := 0ub1_1;
    init(_i_tx_phy#txoe) := 0ub1_1;
    init(_i_tx_phy#txoe_r1) := 0ub1_0;
    init(_i_tx_phy#txoe_r2) := 0ub1_0;
    init(_rst_cnt) := 0ub5_00000;
    init(_usb_rst) := 0ub1_0;
    next(_i_tx_phy#txdn) := _$auto$rtlil#cc#2558#Mux$1316;
    next(_i_tx_phy#state) := _$auto$rtlil#cc#2558#Mux$1312;
    next(_i_tx_phy#ld_sop_d) := _$auto$rtlil#cc#2558#Mux$1308;
    next(_i_tx_phy#append_eop_sync1) := _$auto$rtlil#cc#2558#Mux$1304;
    next(_i_tx_phy#ld_eop_d) := _$auto$rtlil#cc#2558#Mux$1300;
    next(_rst_cnt) := _$auto$rtlil#cc#2558#Mux$1296;
    next(_i_tx_phy#txoe) := _$auto$rtlil#cc#2558#Mux$1292;
    next(_i_rx_phy#synced_d) := _$auto$rtlil#cc#2558#Mux$1288;
    next(_i_rx_phy#fs_state) := _$auto$rtlil#cc#2558#Mux$1284;
    next(_i_rx_phy#rx_active) := _$auto$rtlil#cc#2558#Mux$1280;
    next(_i_rx_phy#rx_valid_r) := _$auto$rtlil#cc#2558#Mux$1276;
    next(_i_rx_phy#sd_nrzi) := _$auto$rtlil#cc#2558#Mux$1272;
    next(_i_rx_phy#one_cnt) := _$auto$rtlil#cc#2558#Mux$1268;
    next(_i_tx_phy#hold_reg) := _$auto$rtlil#cc#2558#Mux$1264;
    next(_i_tx_phy#append_eop_sync2) := _$auto$rtlil#cc#2558#Mux$1260;
    next(_i_rx_phy#bit_cnt) := _$auto$rtlil#cc#2558#Mux$1256;
    next(_i_tx_phy#one_cnt) := _$auto$rtlil#cc#2558#Mux$1252;
    next(_i_rx_phy#rx_valid1) := _$auto$rtlil#cc#2558#Mux$1248;
    next(_i_tx_phy#txoe_r2) := _$auto$rtlil#cc#2558#Mux$1244;
    next(_i_tx_phy#sd_bs_o) := _$auto$rtlil#cc#2558#Mux$1240;
    next(_i_tx_phy#append_eop_sync3) := _$auto$rtlil#cc#2558#Mux$1236;
    next(_i_tx_phy#tx_ip) := _$auto$rtlil#cc#2558#Mux$1232;
    next(_i_tx_phy#tx_ip_sync) := _$auto$rtlil#cc#2558#Mux$1228;
    next(_i_tx_phy#data_done) := _$auto$rtlil#cc#2558#Mux$1224;
    next(_i_tx_phy#bit_cnt) := _$auto$rtlil#cc#2558#Mux$1220;
    next(_i_tx_phy#sd_nrzi_o) := _$auto$rtlil#cc#2558#Mux$1216;
    next(_i_tx_phy#txdp) := _$auto$rtlil#cc#2558#Mux$1212;
    next(_i_tx_phy#append_eop) := _$auto$rtlil#cc#2558#Mux$1208;
    next(_i_tx_phy#txoe_r1) := _$auto$rtlil#cc#2558#Mux$1204;
    next(_i_tx_phy#sd_raw_o) := _$auto$rtlil#cc#2558#Mux$1200;
    next(_i_tx_phy#TxReady_o) := _$auto$rtlil#cc#2558#Mux$1198;
    next(_i_rx_phy#hold_reg) := _$auto$rtlil#cc#2558#Mux$1196;
    next(_i_rx_phy#shift_en) := _$auto$rtlil#cc#2558#Mux$1194;
    next(_i_rx_phy#sd_r) := _$auto$rtlil#cc#2558#Mux$1192;
    next(_i_rx_phy#fs_ce_d) := _$auto$rtlil#cc#2558#Mux$1190;
    next(_i_rx_phy#dpll_state) := _$auto$rtlil#cc#2558#Mux$1188;
    next(_i_tx_phy#tx_ready_d) := _$auto$rtlil#cc#2558#Mux$1186;
    next(_i_rx_phy#rxd_s1) := _i_rx_phy#rxd_t1;
    next(_i_rx_phy#rxd_s) := _i_rx_phy#rxd_s1;
    next(_i_rx_phy#rxdp_t1) := _rxdp;
    next(_i_rx_phy#rxdp_s1) := _i_rx_phy#rxdp_t1;
    next(_i_rx_phy#rxdn_t1) := _rxdn;
    next(_i_rx_phy#rxdn_s1) := _i_rx_phy#rxdn_t1;
    next(_i_rx_phy#rxdp_s1r) := _i_rx_phy#rxdp_s1;
    next(_i_rx_phy#rxdn_s1r) := _i_rx_phy#rxdn_s1;
    next(_i_rx_phy#fs_ce_r1) := _i_rx_phy#fs_ce_d;
    next(_i_rx_phy#fs_ce_r2) := _i_rx_phy#fs_ce_r1;
    next(_i_rx_phy#fs_ce_r3) := _i_rx_phy#fs_ce_r2;
    next(_i_rx_phy#fs_ce) := _i_rx_phy#fs_ce_r3;
    next(_i_rx_phy#rx_valid) := _$flatten#i_rx_phy#$0#rx_valid#0#0#;
    next(_i_tx_phy#ld_data) := _i_tx_phy#tx_ready_d;
    next(_i_tx_phy#sft_done) := _$flatten#i_tx_phy#$0#sft_done#0#0#;
    next(_i_tx_phy#sft_done_r) := _i_tx_phy#sft_done;
    next(_usb_rst) := _$0#usb_rst#0#0#;
    next(_i_rx_phy#rx_en) := _i_tx_phy#txoe;
    next(_i_rx_phy#rxd_t1) := _rxd;
-- end of yosys output
