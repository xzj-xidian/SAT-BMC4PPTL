-- SMV description generated by Yosys 0.34+23 (git sha1 59fbee4009f, clang 6.0.0-1ubuntu2 -fPIC -Os)
MODULE main
  IVAR
    _Clk : unsigned word[1]; -- Clk
    _CtrlData : unsigned word[16]; -- CtrlData
    _Divider : unsigned word[8]; -- Divider
    _Fiad : unsigned word[5]; -- Fiad
    _Mdi : unsigned word[1]; -- Mdi
    _NoPre : unsigned word[1]; -- NoPre
    _RStat : unsigned word[1]; -- RStat
    _Reset : unsigned word[1]; -- Reset
    _Rgad : unsigned word[5]; -- Rgad
    _ScanIncr : unsigned word[1]; -- ScanIncr
    _ScanStat : unsigned word[1]; -- ScanStat
    _WCtrlData : unsigned word[1]; -- WCtrlData
  VAR
    _Nvalid : unsigned word[1]; -- \Nvalid
    _ShftRg#LinkOK : unsigned word[1]; -- \ShftRg.LinkOK
    _LatchByte1_d : unsigned word[1]; -- \LatchByte1_d
    _0 : unsigned word[8]; -- \ShftRg.Prsd [7:0]
    _2 : unsigned word[8]; -- \ShftRg.Prsd [15:8]
    _LatchByte0_d : unsigned word[1]; -- \LatchByte0_d
    _LatchByte : unsigned word[2]; -- \LatchByte
    _SyncStatMdcEn : unsigned word[1]; -- \SyncStatMdcEn
    _BitCounter : unsigned word[6]; -- \BitCounter
    _InProgress : unsigned word[1]; -- \InProgress
    _WriteOp : unsigned word[1]; -- \WriteOp
    _ClkGen#Mdc : unsigned word[1]; -- \ClkGen.Mdc
    _OutCtrl#SerialEn_q : unsigned word[1]; -- \OutCtrl.SerialEn_q
    _OutCtrl#MdoEn_d2 : unsigned word[1]; -- \OutCtrl.MdoEn_d2
    _OutCtrl#MdcFrame_d2 : unsigned word[1]; -- \OutCtrl.MdcFrame_d2
    _ShftRg#ShiftReg : unsigned word[8]; -- \ShftRg.ShiftReg
    _ScanStat_q2 : unsigned word[1]; -- \ScanStat_q2
    _OutCtrl#MdcFrame_d1 : unsigned word[1]; -- \OutCtrl.MdcFrame_d1
    _OutCtrl#MdoEn_d : unsigned word[1]; -- \OutCtrl.MdoEn_d
    _OutCtrl#Mdo_d : unsigned word[1]; -- \OutCtrl.Mdo_d
    _ScanPHYAddrValid : unsigned word[1]; -- \ScanPHYAddrValid
    _StatusSampledEnd : unsigned word[1]; -- \StatusSampledEnd
    _ClkGen#Counter : unsigned word[8]; -- \ClkGen.Counter
    _ShftRg#FiadReg : unsigned word[5]; -- \ShftRg.FiadReg
  DEFINE
  SyncStatMdcEn := bool(_SyncStatMdcEn);
  ScanStat_q2 := bool(_ScanStat_q2);
  InProgress_q1 := bool(_InProgress_q1);
  InProgress_q2 := bool(_InProgress_q2);
  InProgress_q3 := bool(_InProgress_q3);
  EndBusy := bool(_EndBusy);
  Nvalid := bool(_Nvalid);
  Busy := bool(_Busy);
  BitCounter_0 := (_BitCounter = 0ub6_000000);


    _$auto$rtlil#cc#2558#Mux$785 := bool(_$and$vMiim#v#261$11_Y) ? 0ub1_1 : _Nvalid;
    _$auto$rtlil#cc#2558#Mux$781 := bool(_$auto$opt_dff#cc#219#make_patterns_logic$695) ? _ShftRg#ShiftReg[2:2] : _ShftRg#LinkOK;
    _$auto$rtlil#cc#2558#Mux$777 := bool(_ShftRg#MdcEn) ? _LatchByte1_d2 : _LatchByte1_d;
    _$auto$rtlil#cc#2558#Mux$773 := bool(_LatchByte[0:0]) ? _ShftRg#ShiftReg : (_1[7:0]);
    _$auto$rtlil#cc#2558#Mux$769 := bool(_$auto$opt_dff#cc#219#make_patterns_logic$690) ? _ShftRg#ShiftReg : (_3[7:0]);
    _$auto$rtlil#cc#2558#Mux$765 := bool(_ShftRg#MdcEn) ? _LatchByte0_d2 : _LatchByte0_d;
    _$auto$rtlil#cc#2558#Mux$761 := bool(_ShftRg#MdcEn) ? (_LatchByte1_d :: _LatchByte0_d) : _LatchByte;
    _$auto$rtlil#cc#2558#Mux$757 := bool(_ShftRg#MdcEn) ? _ScanStat : _SyncStatMdcEn;
    _$auto$rtlil#cc#2558#Mux$753 := bool(_ShftRg#MdcEn) ? _$3#BitCounter#5#0# : _BitCounter;
    _$auto$rtlil#cc#2558#Mux$749 := bool(_$auto$opt_dff#cc#219#make_patterns_logic$681) ? _$3#InProgress#0#0# : _InProgress;
    _$auto$rtlil#cc#2558#Mux$745 := bool(_$auto$opt_dff#cc#219#make_patterns_logic$676) ? _$3#WriteOp#0#0# : _WriteOp;
    _$auto$rtlil#cc#2558#Mux$741 := bool(_$flatten#ClkGen#$and$vMiim#v#533$72_Y) ? _$flatten#ClkGen#$not$vMiim#v#534$73_Y : _ClkGen#Mdc;
    _$auto$rtlil#cc#2558#Mux$737 := bool(_ShftRg#MdcEn) ? _OutCtrl#SerialEn : _OutCtrl#SerialEn_q;
    _$auto$rtlil#cc#2558#Mux$733 := bool(_ShftRg#MdcEn) ? _$flatten#OutCtrl#$or$vMiim#v#645$98_Y : _OutCtrl#MdoEn_d2;
    _$auto$rtlil#cc#2558#Mux$729 := bool(_ShftRg#MdcEn) ? _InProgress : _OutCtrl#MdcFrame_d2;
    _$auto$rtlil#cc#2558#Mux$725 := bool(_ShftRg#MdcEn) ? _$flatten#ShftRg#$3#ShiftReg#7#0# : _ShftRg#ShiftReg;
    _$add$vMiim#v#375$36_Y := resize(_BitCounter, 6) + resize(0ub1_1, 6);
    _$and$vMiim#v#261$11_Y := resize(_ScanStat_q2, 1) & resize(_$not$vMiim#v#261$10_Y, 1);
    _$and$vMiim#v#314$18_Y := resize(_SyncStatMdcEn, 1) & resize(_$not$vMiim#v#314$17_Y, 1);
    _$and$vMiim#v#314$20_Y := resize(_$and$vMiim#v#314$18_Y, 1) & resize(_$not$vMiim#v#196$2_Y, 1);
    _ScanStatusOp := resize(_$and$vMiim#v#314$20_Y, 1) & resize(_$not$vMiim#v#196$2_Y, 1);
    _$and$vMiim#v#387$42_Y := resize(_$not$vMiim#v#387$40_Y, 1) & resize(_$eq$vMiim#v#387$41_Y, 1);
    _4 := resize(_InProgress, 1) & resize(_$or$vMiim#v#387$43_Y, 1);
    _5 := resize(_InProgress, 1) & resize(_$eq$vMiim#v#388$45_Y, 1);
    _6 := resize(_$and$vMiim#v#389$47_Y, 1) & resize(_$eq$vMiim#v#389$48_Y, 1);
    _7 := resize(_$and$vMiim#v#389$47_Y, 1) & resize(_$eq$vMiim#v#390$51_Y, 1);
    _LatchByte1_d2 := resize(_$and$vMiim#v#393$54_Y, 1) & resize(_$eq$vMiim#v#393$55_Y, 1);
    _LatchByte0_d2 := resize(_$and$vMiim#v#393$54_Y, 1) & resize(_$eq$vMiim#v#394$59_Y, 1);
    _StatusSampled := resize(_$not$vMiim#v#408$62_Y, 1) & resize(_LatchByte[0:0], 1);
    _$auto$rtlil#cc#2558#Mux$709 := bool(_$auto$opt_dff#cc#194#make_patterns_logic$634) ? _$flatten#ShftRg#$0#FiadReg#4#0# : _ShftRg#FiadReg;
    _$auto$rtlil#cc#2558#Mux$711 := bool(_Reset) ? 0ub8_00000001 : _$flatten#ClkGen#$2#Counter#7#0#;
    _$auto$rtlil#cc#2558#Mux$713 := bool(_Reset) ? 0ub1_0 : _LatchByte[0:0];
    _$auto$rtlil#cc#2558#Mux$715 := bool(_Reset) ? 0ub1_0 : _$2#ScanPHYAddrValid#0#0#;
    _$auto$rtlil#cc#2558#Mux$717 := bool(_Reset) ? 0ub1_0 : _$flatten#OutCtrl#$or$vMiim#v#682$102_Y;
    _$auto$rtlil#cc#2558#Mux$719 := bool(_Reset) ? 0ub1_0 : _OutCtrl#MdoEn_d2;
    _$auto$rtlil#cc#2558#Mux$721 := bool(_Reset) ? 0ub1_0 : _OutCtrl#MdcFrame_d2;
    _$auto$rtlil#cc#2558#Mux$723 := bool(_Reset) ? 0ub1_0 : _ScanStat;
    _$auto$rtlil#cc#2558#Mux$727 := bool(_Reset) ? 0ub8_00000000 : _$auto$rtlil#cc#2558#Mux$725;
    _$auto$rtlil#cc#2558#Mux$731 := bool(_Reset) ? 0ub1_0 : _$auto$rtlil#cc#2558#Mux$729;
    _$auto$rtlil#cc#2558#Mux$735 := bool(_Reset) ? 0ub1_0 : _$auto$rtlil#cc#2558#Mux$733;
    _$auto$rtlil#cc#2558#Mux$739 := bool(_Reset) ? 0ub1_0 : _$auto$rtlil#cc#2558#Mux$737;
    _$auto$rtlil#cc#2558#Mux$743 := bool(_Reset) ? 0ub1_0 : _$auto$rtlil#cc#2558#Mux$741;
    _$auto$rtlil#cc#2558#Mux$747 := bool(_Reset) ? 0ub1_0 : _$auto$rtlil#cc#2558#Mux$745;
    _$auto$rtlil#cc#2558#Mux$751 := bool(_Reset) ? 0ub1_0 : _$auto$rtlil#cc#2558#Mux$749;
    _$auto$rtlil#cc#2558#Mux$755 := bool(_Reset) ? 0ub6_000000 : _$auto$rtlil#cc#2558#Mux$753;
    _$auto$rtlil#cc#2558#Mux$759 := bool(_Reset) ? 0ub1_0 : _$auto$rtlil#cc#2558#Mux$757;
    _$auto$rtlil#cc#2558#Mux$763 := bool(_Reset) ? 0ub2_00 : _$auto$rtlil#cc#2558#Mux$761;
    _$auto$rtlil#cc#2558#Mux$767 := bool(_Reset) ? 0ub1_0 : _$auto$rtlil#cc#2558#Mux$765;
    _$auto$rtlil#cc#2558#Mux$771 := bool(_Reset) ? 0ub8_00000000 : _$auto$rtlil#cc#2558#Mux$769;
    _$auto$rtlil#cc#2558#Mux$775 := bool(_Reset) ? 0ub8_00000000 : _$auto$rtlil#cc#2558#Mux$773;
    _$auto$rtlil#cc#2558#Mux$779 := bool(_Reset) ? 0ub1_0 : _$auto$rtlil#cc#2558#Mux$777;
    _$auto$rtlil#cc#2558#Mux$783 := bool(_Reset) ? 0ub1_0 : _$auto$rtlil#cc#2558#Mux$781;
    _$auto$rtlil#cc#2558#Mux$787 := bool(_Reset) ? 0ub1_0 : _$auto$rtlil#cc#2558#Mux$785;
    _$auto$opt_dff#cc#194#make_patterns_logic$634 := resize(word1((_$flatten#ShftRg#$and$vMiim#v#829$113_Y :: _$flatten#ShftRg#$or$vMiim#v#829$116_Y :: _Reset) != 0ub3_0), 1);
    _$auto$opt_dff#cc#194#make_patterns_logic$672 := resize(word1((_EndOp :: _ScanStatusOp) != 0ub2_0), 1);
    _$auto$opt_dff#cc#194#make_patterns_logic$674 := resize(word1(resize((_InProgress :: _ScanStatusOp), 2) != resize(0ub2_11, 2)), 1);
    _$auto$rtlil#cc#2461#Not$689 := !resize(_LatchByte[0:0], 1);
    _$auto$opt_dff#cc#219#make_patterns_logic$676 := resize(word1((_$auto$opt_dff#cc#194#make_patterns_logic$672 :: _ShftRg#MdcEn :: _$auto$opt_dff#cc#194#make_patterns_logic$674) = !0ub3_0), 1);
    _$auto$opt_dff#cc#219#make_patterns_logic$681 := resize(word1((_$auto$opt_dff#cc#194#make_patterns_logic$672 :: _ShftRg#MdcEn) = !0ub2_0), 1);
    _$auto$opt_dff#cc#219#make_patterns_logic$690 := resize(word1((_$auto$rtlil#cc#2461#Not$689 :: _LatchByte[1:1]) = !0ub2_0), 1);
    _$auto$opt_dff#cc#219#make_patterns_logic$695 := resize(word1((_$flatten#ShftRg#$eq$vMiim#v#806$108_Y :: _LatchByte[0:0]) = !0ub2_0), 1);
    _$eq$vMiim#v#387$41_Y := resize(word1(resize(_BitCounter, 6) = resize(0ub6_100000, 6)), 1);
    _$eq$vMiim#v#388$45_Y := resize(word1(resize(_BitCounter, 6) = resize(0ub6_101000, 6)), 1);
    _$eq$vMiim#v#389$48_Y := resize(word1(resize(_BitCounter, 6) = resize(0ub6_110000, 6)), 1);
    _$eq$vMiim#v#390$51_Y := resize(word1(resize(_BitCounter, 6) = resize(0ub6_111000, 6)), 1);
    _$eq$vMiim#v#393$55_Y := resize(word1(resize(_BitCounter, 6) = resize(0ub6_110111, 6)), 1);
    _$eq$vMiim#v#394$59_Y := resize(word1(resize(_BitCounter, 6) = resize(0ub6_111111, 6)), 1);
    _$flatten#ClkGen#$and$vMiim#v#533$72_Y := resize(_ClkGen#CountEq0, 1) & resize(_OutCtrl#MdcFrame_d1, 1);
    _ShftRg#MdcEn := resize(_ClkGen#CountEq0, 1) & resize(_$flatten#ClkGen#$not$vMiim#v#534$73_Y, 1);
    _ClkGen#CountEq0 := resize(word1((_ClkGen#Counter = 0ub8_0)), 1);
    _$flatten#ClkGen#$lt$vMiim#v#505$66_Y := resize(word1(resize(_Divider, 32) < resize(0ub32_00000000000000000000000000000010, 32)), 1);
    _$flatten#ClkGen#$not$vMiim#v#534$73_Y := !resize(_ClkGen#Mdc, 1);
    _8 := resize(0ub25_0000000000000000000000000 :: _ClkGen#TempDivider[7:1], 32) - resize(0ub32_00000000000000000000000000000001, 32);
    _$flatten#ClkGen#$sub$vMiim#v#521$70_Y := resize(_ClkGen#Counter, 8) - resize(0ub8_00000001, 8);
    _ClkGen#TempDivider := bool(_$flatten#ClkGen#$lt$vMiim#v#505$66_Y) ? 0ub8_00000010 : _Divider;
    _$and$vMiim#v#389$47_Y := resize(_WriteOp, 1) & resize(_InProgress, 1);
    _$and$vMiim#v#372$35_Y := resize(_$eq$vMiim#v#372$34_Y, 1) & resize(_NoPre, 1);
    _$flatten#OutCtrl#$and$vMiim#v#626$82_Y := resize(_$and$vMiim#v#389$47_Y, 1) & resize(_$flatten#OutCtrl#$or$vMiim#v#626$81_Y, 1);
    _$and$vMiim#v#393$54_Y := resize(_$flatten#OutCtrl#$not$vMiim#v#627$83_Y, 1) & resize(_InProgress, 1);
    _$flatten#OutCtrl#$and$vMiim#v#627$86_Y := resize(_BitCounter[5:5], 1) & resize(_$flatten#OutCtrl#$not$vMiim#v#627$85_Y, 1);
    _$flatten#OutCtrl#$and$vMiim#v#627$89_Y := resize(_$flatten#OutCtrl#$and$vMiim#v#627$86_Y, 1) & resize(_$flatten#OutCtrl#$logic_not$vMiim#v#0$88_Y, 1);
    _$flatten#OutCtrl#$and$vMiim#v#627$93_Y := resize(_$and$vMiim#v#393$54_Y, 1) & resize(_$flatten#OutCtrl#$or$vMiim#v#627$92_Y, 1);
    _$flatten#OutCtrl#$and$vMiim#v#645$97_Y := resize(_InProgress, 1) & resize(_$flatten#OutCtrl#$not$vMiim#v#645$96_Y, 1);
    _$eq$vMiim#v#372$34_Y := resize(word1((_BitCounter = 0ub6_0)), 1);
    _$flatten#OutCtrl#$logic_not$vMiim#v#0$88_Y := resize(word1((_$flatten#OutCtrl#$reduce_and$vMiim#v#627$87_Y = 0ub1_0)), 1);
    _$flatten#OutCtrl#$not$vMiim#v#627$83_Y := !resize(_WriteOp, 1);
    _$flatten#OutCtrl#$not$vMiim#v#627$85_Y := !resize(_BitCounter[4:4], 1);
    _$flatten#OutCtrl#$not$vMiim#v#645$96_Y := !resize(_BitCounter[5:5], 1);
    _$flatten#OutCtrl#$not$vMiim#v#682$101_Y := !resize(_OutCtrl#SerialEn_q, 1);
    _$flatten#OutCtrl#$or$vMiim#v#626$81_Y := resize(_BitCounter[5:5], 1) | resize(_$and$vMiim#v#372$35_Y, 1);
    _OutCtrl#SerialEn := resize(_$flatten#OutCtrl#$and$vMiim#v#626$82_Y, 1) | resize(_$flatten#OutCtrl#$and$vMiim#v#627$93_Y, 1);
    _$flatten#OutCtrl#$or$vMiim#v#627$92_Y := resize(_$flatten#OutCtrl#$and$vMiim#v#627$89_Y, 1) | resize(_$and$vMiim#v#372$35_Y, 1);
    _$flatten#OutCtrl#$or$vMiim#v#645$98_Y := resize(_OutCtrl#SerialEn, 1) | resize(_$flatten#OutCtrl#$and$vMiim#v#645$97_Y, 1);
    _$flatten#OutCtrl#$or$vMiim#v#682$102_Y := resize(_ShftRg#ShiftReg[7:7], 1) | resize(_$flatten#OutCtrl#$not$vMiim#v#682$101_Y, 1);
    _$flatten#OutCtrl#$reduce_and$vMiim#v#627$87_Y := resize(word1(_BitCounter[3:1] = !0ub3_0), 1);
    _$flatten#ShftRg#$add$vMiim#v#834$118_Y := resize(_ShftRg#FiadReg, 32) + resize(0ub32_00000000000000000000000000000001, 32);
    _$flatten#ShftRg#$and$vMiim#v#819$109_Y := resize(_SyncStatMdcEn, 1) & resize(_5[0:0], 1);
    _ShftRg#IncrementAddr := resize(_$flatten#ShftRg#$and$vMiim#v#819$109_Y, 1) & resize(_ShftRg#MdcEn, 1);
    _$flatten#ShftRg#$and$vMiim#v#829$113_Y := resize(_ScanIncr, 1) & resize(_ShftRg#IncrementAddr, 1);
    _$flatten#ShftRg#$and$vMiim#v#829$115_Y := resize(_$flatten#ShftRg#$and$vMiim#v#829$113_Y, 1) & resize(_$flatten#ShftRg#$eq$vMiim#v#829$114_Y, 1);
    _$flatten#ShftRg#$eq$vMiim#v#806$108_Y := resize(word1(resize(_Rgad, 5) = resize(0ub5_00001, 5)), 1);
    _$flatten#ShftRg#$eq$vMiim#v#829$114_Y := resize(word1(resize(_ShftRg#FiadReg, 5) = resize(0ub5_11111, 5)), 1);
    _$flatten#ShftRg#$not$vMiim#v#829$112_Y := !resize(_ScanIncr, 1);
    _$flatten#ShftRg#$or$vMiim#v#829$116_Y := resize(_$flatten#ShftRg#$not$vMiim#v#829$112_Y, 1) | resize(_$flatten#ShftRg#$and$vMiim#v#829$115_Y, 1);
    _$flatten#ShftRg#$reduce_or$vMiim#v#770$105_Y := resize(word1(((((_7[0:0]) :: _6[0:0]) :: _5[0:0]) :: _4[0:0]) != 0ub4_0), 1);
    _$not$vMiim#v#261$10_Y := !resize(_SyncStatMdcEn, 1);
    _$not$vMiim#v#196$2_Y := !resize(_OutCtrl#MdcFrame_d2, 1);
    _$not$vMiim#v#314$17_Y := !resize(_InProgress, 1);
    _$not$vMiim#v#387$40_Y := !resize(_NoPre, 1);
    _$not$vMiim#v#408$62_Y := !resize(_StatusSampledEnd, 1);
    _$or$vMiim#v#319$28_Y := resize(_SyncStatMdcEn, 1) | resize(_InProgress, 1);
    _Busy := resize(_$or$vMiim#v#319$28_Y, 1) | resize(_OutCtrl#MdcFrame_d2, 1);
    _$or$vMiim#v#387$43_Y := resize(_$and$vMiim#v#372$35_Y, 1) | resize(_$and$vMiim#v#387$42_Y, 1);
    _$flatten#ShftRg#$4#ShiftReg#7#0# := bool(_$procmux$169_CMP) ? _CtrlData[7:0] : bool(_$procmux$170_CMP) ? _CtrlData[15:8] : bool(_$procmux$171_CMP) ? (_ShftRg#FiadReg[0:0] :: _Rgad :: 0ub2_10) : bool(_$procmux$172_CMP) ? (0ub2_01 :: _$flatten#OutCtrl#$not$vMiim#v#627$83_Y :: _WriteOp :: _ShftRg#FiadReg[4:1]) : 0ub8_00000000;
    _$procmux$169_CMP := resize(word1(resize(((((_7[0:0]) :: _6[0:0]) :: _5[0:0]) :: _4[0:0]), 4) = resize(0ub4_1000, 4)), 1);
    _$procmux$170_CMP := resize(word1(resize(((((_7[0:0]) :: _6[0:0]) :: _5[0:0]) :: _4[0:0]), 4) = resize(0ub4_0100, 4)), 1);
    _$procmux$171_CMP := resize(word1(resize(((((_7[0:0]) :: _6[0:0]) :: _5[0:0]) :: _4[0:0]), 4) = resize(0ub4_0010, 4)), 1);
    _$procmux$172_CMP := resize(word1(resize(((((_7[0:0]) :: _6[0:0]) :: _5[0:0]) :: _4[0:0]), 4) = resize(0ub4_0001, 4)), 1);
    _$flatten#ShftRg#$3#ShiftReg#7#0# := bool(_$flatten#ShftRg#$reduce_or$vMiim#v#770$105_Y) ? _$flatten#ShftRg#$4#ShiftReg#7#0# : (_ShftRg#ShiftReg[6:0] :: _Mdi);
    _$flatten#ShftRg#$3#FiadReg#4#0# := bool(_$flatten#ShftRg#$and$vMiim#v#829$113_Y) ? _$flatten#ShftRg#$add$vMiim#v#834$118_Y[4:0] : 0ub5_00000;
    _$flatten#ShftRg#$2#FiadReg#4#0# := bool(_$flatten#ShftRg#$or$vMiim#v#829$116_Y) ? _Fiad : _$flatten#ShftRg#$3#FiadReg#4#0#;
    _$flatten#ShftRg#$0#FiadReg#4#0# := bool(_Reset) ? _Fiad : _$flatten#ShftRg#$2#FiadReg#4#0#;
    _$flatten#ClkGen#$2#Counter#7#0# := bool(_ClkGen#CountEq0) ? (_8[7:0]) : _$flatten#ClkGen#$sub$vMiim#v#521$70_Y;
    _$2#ScanPHYAddrValid#0#0# := bool(_StatusSampled) ? 0ub1_1 : 0ub1_0;
    _$4#BitCounter#5#0# := bool(_$and$vMiim#v#372$35_Y) ? 0ub6_100001 : _$add$vMiim#v#375$36_Y;
    _$3#BitCounter#5#0# := bool(_OutCtrl#MdcFrame_d2) ? _$4#BitCounter#5#0# : 0ub6_000000;
    _$4#InProgress#0#0# := bool(_EndOp) ? 0ub1_0 : 0ub1_0;
    _$4#WriteOp#0#0# := bool(_InProgress) ? 0ub1_0 : 0ub1_0;
    _$3#InProgress#0#0# := bool(_ScanStatusOp) ? 0ub1_1 : _$4#InProgress#0#0#;
    _$3#WriteOp#0#0# := bool(_ScanStatusOp) ? _$4#WriteOp#0#0# : _$4#InProgress#0#0#;
    _EndOp := resize(word1(_BitCounter = !0ub6_0), 1);
    _ClkGen#CounterPreset := _8[7:0];
    _ShftRg#ByteSelect := _7[0:0] :: _6[0:0] :: _5[0:0] :: _4[0:0];
    _ShftRg#Prsd := _3[7:0] :: _1[7:0];
    _WriteDataOp := 0ub1_0;
    _WCtrlDataStart_q2 := 0ub1_0;
    _WCtrlDataStart_q1 := 0ub1_0;
    _WCtrlDataStart := 0ub1_0;
    _StartOp := _ScanStatusOp;
    _ShiftedBit := _ShftRg#ShiftReg[7:7];
    _ShftRg#WriteOp := _WriteOp;
    _ShftRg#SyncStatMdcEn := _SyncStatMdcEn;
    _ShftRg#ShiftedBit := _ShftRg#ShiftReg[7:7];
    _ShftRg#ScanPHYAddr := _ShftRg#FiadReg;
    _ShftRg#ScanIncr := _ScanIncr;
    _ShftRg#Rgad := _Rgad;
    _ShftRg#Reset := _Reset;
    _ShftRg#Mdi := _Mdi;
    _ShftRg#LatchByte := _LatchByte;
    _ShftRg#Fiad := _Fiad;
    _ShftRg#CtrlData := _CtrlData;
    _ShftRg#Clk := _Clk;
    _ScanStat_q1 := _ScanStat_q2;
    _ScanPHYAddr := _ShftRg#FiadReg;
    _ReadStatusOp := 0ub1_0;
    _RStatStart_q2 := 0ub1_0;
    _RStatStart_q1 := 0ub1_0;
    _RStatStart := 0ub1_0;
    _Prsd := _3[7:0] :: _1[7:0];
    _OutCtrl#WriteOp := _WriteOp;
    _OutCtrl#ShiftedBit := _ShftRg#ShiftReg[7:7];
    _OutCtrl#Reset := _Reset;
    _OutCtrl#NoPre := _NoPre;
    _OutCtrl#MdoEn := _OutCtrl#MdoEn_d;
    _OutCtrl#Mdo := _OutCtrl#Mdo_d;
    _OutCtrl#MdcFrame := _OutCtrl#MdcFrame_d1;
    _OutCtrl#MdcEn := _ShftRg#MdcEn;
    _OutCtrl#InProgress := _InProgress;
    _OutCtrl#Clk := _Clk;
    _OutCtrl#BitCounter := _BitCounter;
    _MdoEn := _OutCtrl#MdoEn_d;
    _Mdo := _OutCtrl#Mdo_d;
    _MdcFrame := _OutCtrl#MdcFrame_d1;
    _MdcEn := _ShftRg#MdcEn;
    _Mdc := _ClkGen#Mdc;
    _LinkOK := _ShftRg#LinkOK;
    _InProgress_q3 := _OutCtrl#MdcFrame_d2;
    _InProgress_q2 := _OutCtrl#MdcFrame_d2;
    _InProgress_q1 := _OutCtrl#MdcFrame_d2;
    _EndBusy_d := 0ub1_0;
    _EndBusy := 0ub1_0;
    _ClkGen#Reset := _Reset;
    _ClkGen#MdoEn := _OutCtrl#MdoEn_d;
    _ClkGen#MdcFrame := _OutCtrl#MdcFrame_d1;
    _ClkGen#MdcEn := _ShftRg#MdcEn;
    _ClkGen#Divider := _Divider;
    _ClkGen#Clk := _Clk;
    _ByteSelect := _7[0:0] :: _6[0:0] :: _5[0:0] :: _4[0:0];
    _$flatten#ClkGen#$sub$vMiim#v#506$68_Y := _8[31:0];
  ASSIGN
    init(_BitCounter) := 0ub6_000000;
    init(_ClkGen#Counter) := 0ub8_00000000;
    init(_ClkGen#Mdc) := 0ub1_0;
    init(_InProgress) := 0ub1_0;
    init(_LatchByte) := 0ub2_00;
    init(_LatchByte0_d) := 0ub1_0;
    init(_LatchByte1_d) := 0ub1_0;
    init(_Nvalid) := 0ub1_0;
    init(_OutCtrl#MdcFrame_d1) := 0ub1_0;
    init(_OutCtrl#MdcFrame_d2) := 0ub1_0;
    init(_OutCtrl#MdoEn_d) := 0ub1_0;
    init(_OutCtrl#MdoEn_d2) := 0ub1_0;
    init(_OutCtrl#Mdo_d) := 0ub1_0;
    init(_OutCtrl#SerialEn_q) := 0ub1_0;
    init(_ScanPHYAddrValid) := 0ub1_0;
    init(_ScanStat_q2) := 0ub1_0;
    init(_ShftRg#FiadReg) := 0ub5_00000;
    init(_ShftRg#LinkOK) := 0ub1_0;
    init(_ShftRg#Prsd) := 0ub16_0000000000000000;
    init(_ShftRg#ShiftReg) := 0ub8_00000000;
    init(_StatusSampledEnd) := 0ub1_0;
    init(_SyncStatMdcEn) := 0ub1_0;
    init(_WriteOp) := 0ub1_0;
    next(_Nvalid) := _$auto$rtlil#cc#2558#Mux$787;
    next(_ShftRg#LinkOK) := _$auto$rtlil#cc#2558#Mux$783;
    next(_LatchByte1_d) := _$auto$rtlil#cc#2558#Mux$779;
    next(_1) := _$auto$rtlil#cc#2558#Mux$775;
    next(_3) := _$auto$rtlil#cc#2558#Mux$771;
    next(_LatchByte0_d) := _$auto$rtlil#cc#2558#Mux$767;
    next(_LatchByte) := _$auto$rtlil#cc#2558#Mux$763;
    next(_SyncStatMdcEn) := _$auto$rtlil#cc#2558#Mux$759;
    next(_BitCounter) := _$auto$rtlil#cc#2558#Mux$755;
    next(_InProgress) := _$auto$rtlil#cc#2558#Mux$751;
    next(_WriteOp) := _$auto$rtlil#cc#2558#Mux$747;
    next(_ClkGen#Mdc) := _$auto$rtlil#cc#2558#Mux$743;
    next(_OutCtrl#SerialEn_q) := _$auto$rtlil#cc#2558#Mux$739;
    next(_OutCtrl#MdoEn_d2) := _$auto$rtlil#cc#2558#Mux$735;
    next(_OutCtrl#MdcFrame_d2) := _$auto$rtlil#cc#2558#Mux$731;
    next(_ShftRg#ShiftReg) := _$auto$rtlil#cc#2558#Mux$727;
    next(_ScanStat_q2) := _$auto$rtlil#cc#2558#Mux$723;
    next(_OutCtrl#MdcFrame_d1) := _$auto$rtlil#cc#2558#Mux$721;
    next(_OutCtrl#MdoEn_d) := _$auto$rtlil#cc#2558#Mux$719;
    next(_OutCtrl#Mdo_d) := _$auto$rtlil#cc#2558#Mux$717;
    next(_ScanPHYAddrValid) := _$auto$rtlil#cc#2558#Mux$715;
    next(_StatusSampledEnd) := _$auto$rtlil#cc#2558#Mux$713;
    next(_ClkGen#Counter) := _$auto$rtlil#cc#2558#Mux$711;
    next(_ShftRg#FiadReg) := _$auto$rtlil#cc#2558#Mux$709;
-- end of yosys output
