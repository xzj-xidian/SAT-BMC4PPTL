-- SMV description generated by Yosys 0.34+23 (git sha1 59fbee4009f, clang 6.0.0-1ubuntu2 -fPIC -Os)
MODULE main
  IVAR
    _clock : unsigned word[1]; -- clock
    _data_in : unsigned word[8]; -- data_in
    _dsr : unsigned word[1]; -- dsr
    _eoc : unsigned word[1]; -- eoc
  VAR
    _data_out : unsigned word[1]; -- \data_out
    _next_bit : unsigned word[1]; -- \next_bit
    _tx_conta : unsigned word[10]; -- \tx_conta
    _error : unsigned word[1]; -- \error
    _send_en : unsigned word[1]; -- \send_en
    _tre : unsigned word[1]; -- \tre
    _itfc_state : unsigned word[1]; -- \itfc_state
    _send : unsigned word[1]; -- \send
    _load : unsigned word[1]; -- \load
    _add_mpx2 : unsigned word[1]; -- \add_mpx2
    _S2 : unsigned word[1]; -- \S2
    _shot : unsigned word[1]; -- \shot
    _soc : unsigned word[1]; -- \soc
    _load_dato : unsigned word[1]; -- \load_dato
    _canale : unsigned word[4]; -- \canale
    _mux_en : unsigned word[1]; -- \mux_en
    _S1 : unsigned word[1]; -- \S1
    _send_data : unsigned word[1]; -- \send_data
  DEFINE
    send_data := bool(_send_data);
    data_out := bool(_data_out);
    soc := bool(_soc);
    eoc := bool(_eoc);
    error := bool(_error)
    load := bool(_load);
    send := bool(_send);

    _$add$b13_1#v#303$16_Y := resize(_tx_conta, 10) + resize(0ub1_1, 10);
    _$gt$b13_1#v#257$15_Y := resize(word1(resize(_tx_conta, 10) > resize(0ub7_1101000, 10)), 1);
    _$logic_not$b13_1#v#235$11_Y := resize(word1((_$0#tre#0#0# = 0ub1_0)), 1);
    _$logic_not$b13_1#v#235$12_Y := resize(word1((_dsr = 0ub1_0)), 1);
    _$logic_or$b13_1#v#235$13_Y := resize(word1((_$logic_not$b13_1#v#235$11_Y != 0ub1_0) | (_$logic_not$b13_1#v#235$12_Y != 0ub1_0)), 1);
    _$0#error#0#0# := bool(_send) ? _$4#error#0#0# : _$1#error#0#0#;
    _$2#error#0#0# := bool(_tre) ? 0ub1_1 : 0ub1_0;
    _$0#tre#0#0# := bool(_load) ? 0ub1_1 : _tre;
    _$1#error#0#0# := bool(_load) ? _$2#error#0#0# : _error;
    _$2#itfc_state#0#0# := bool(_shot) ? 0ub1_1 : 0ub1_0;
    _$2#load#0#0# := bool(_shot) ? 0ub1_1 : _load;
    _$0#load#0#0# := bool(_itfc_state) ? 0ub1_0 : bool(_$procmux$154_CMP) ? _$2#load#0#0# : 0ub1_0;
    _$procmux$154_CMP := !resize(_itfc_state, 1);
    _$0#itfc_state#0#0# := bool(_itfc_state) ? 0ub1_0 : bool(_$procmux$154_CMP) ? _$2#itfc_state#0#0# : 0ub1_0;
    _$0#send#0#0# := bool(_itfc_state) ? 0ub1_1 : bool(_$procmux$154_CMP) ? _send : 0ub1_0;
    _$2#S2#0#0# := bool(_send_data) ? 0ub1_1 : 0ub1_0;
    _$0#S2#0#0# := bool(_S2) ? 0ub1_0 : bool(_$procmux$181_CMP) ? _$2#S2#0#0# : 0ub1_0;
    _$procmux$181_CMP := !resize(_S2, 1);
    _$0#shot#0#0# := bool(_S2) ? 0ub1_1 : bool(_$procmux$181_CMP) ? _shot : 0ub1_0;
    _$0#S1#0#0# := bool(_S1) ? 0ub1_0 : bool(_$procmux$193_CMP) ? 0ub1_1 : 0ub1_0;
    _$procmux$193_CMP := !resize(_S1, 1);
    _$0#mux_en#0#0# := bool(_S1) ? _mux_en : bool(_$procmux$193_CMP) ? 0ub1_1 : 0ub1_0;
    _$3#next_bit#0#0# := bool(_next_bit) ? 0ub1_1 : 0ub1_0;
    _$3#data_out#0#0# := bool(_next_bit) ? 0ub1_0 : 0ub1_1;
    _$2#tx_conta#9#0# := bool(_$gt$b13_1#v#257$15_Y) ? 0ub10_0000000000 : _$add$b13_1#v#303$16_Y;
    _$2#next_bit#0#0# := bool(_$gt$b13_1#v#257$15_Y) ? _$3#next_bit#0#0# : _next_bit;
    _$2#data_out#0#0# := bool(_$gt$b13_1#v#257$15_Y) ? _$3#data_out#0#0# : 0ub1_1;
    _$0#tx_conta#9#0# := bool(_send_en) ? _$2#tx_conta#9#0# : _tx_conta;
    _$0#next_bit#0#0# := bool(_send_en) ? _$2#next_bit#0#0# : _next_bit;
    _$0#data_out#0#0# := bool(_send_en) ? _$2#data_out#0#0# : 0ub1_1;
    _$4#error#0#0# := bool(_$logic_or$b13_1#v#235$13_Y) ? 0ub1_1 : 0ub1_0;
    _$3#send_en#0#0# := bool(_$logic_or$b13_1#v#235$13_Y) ? _send_en : 0ub1_1;
    _$0#send_en#0#0# := bool(_send) ? _$3#send_en#0#0# : _send_en;
    _tx_end := 0ub1_0;
  ASSIGN
    init(_S1) := 0ub1_0;
    init(_S2) := 0ub1_0;
    init(_add_mpx2) := 0ub1_0;
    init(_canale) := 0ub4_0000;
    init(_data_out) := 0ub1_0;
    init(_error) := 0ub1_0;
    init(_itfc_state) := 0ub1_0;
    init(_load) := 0ub1_0;
    init(_load_dato) := 0ub1_0;
    init(_mux_en) := 0ub1_0;
    init(_next_bit) := 0ub1_1;
    init(_send) := 0ub1_0;
    init(_send_data) := 0ub1_0;
    init(_send_en) := 0ub1_0;
    init(_shot) := 0ub1_0;
    init(_soc) := 0ub1_0;
    init(_tre) := 0ub1_0;
    init(_tx_conta) := 0ub10_0000000000;
    next(_data_out) := _$0#data_out#0#0#;
    next(_next_bit) := _$0#next_bit#0#0#;
    next(_tx_conta) := _$0#tx_conta#9#0#;
    next(_error) := _$0#error#0#0#;
    next(_send_en) := _$0#send_en#0#0#;
    next(_tre) := _$0#tre#0#0#;
    next(_itfc_state) := _$0#itfc_state#0#0#;
    next(_send) := _$0#send#0#0#;
    next(_load) := _$0#load#0#0#;
    next(_add_mpx2) := _add_mpx2;
    next(_S2) := _$0#S2#0#0#;
    next(_shot) := _$0#shot#0#0#;
    next(_soc) := _soc;
    next(_load_dato) := _load_dato;
    next(_canale) := _canale;
    next(_mux_en) := _$0#mux_en#0#0#;
    next(_S1) := _$0#S1#0#0#;
    next(_send_data) := _send_data;
-- end of yosys output
